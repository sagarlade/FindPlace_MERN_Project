{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = createNativePannerNodeFaker => {\n  return (nativeContext, options) => {\n    const nativePannerNode = nativeContext.createPanner();\n    // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n    if (nativePannerNode.orientationX === undefined) {\n      return createNativePannerNodeFaker(nativeContext, options);\n    }\n    assignNativeAudioNodeOptions(nativePannerNode, options);\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n    return nativePannerNode;\n  };\n};","map":{"version":3,"names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOption","assignNativeAudioNodeOptions","createNativePannerNodeFactory","createNativePannerNodeFaker","nativeContext","options","nativePannerNode","createPanner","orientationX","undefined"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js"],"sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=native-panner-node-factory.js.map"],"mappings":"AAAA,SAASA,oCAAoC,QAAQ,uDAAuD;AAC5G,SAASC,2BAA2B,QAAQ,4CAA4C;AACxF,SAASC,4BAA4B,QAAQ,6CAA6C;AAC1F,OAAO,MAAMC,6BAA6B,GAAIC,2BAA2B,IAAK;EAC1E,OAAO,CAACC,aAAa,EAAEC,OAAO,KAAK;IAC/B,MAAMC,gBAAgB,GAAGF,aAAa,CAACG,YAAY,CAAC,CAAC;IACrD;IACA,IAAID,gBAAgB,CAACE,YAAY,KAAKC,SAAS,EAAE;MAC7C,OAAON,2BAA2B,CAACC,aAAa,EAAEC,OAAO,CAAC;IAC9D;IACAJ,4BAA4B,CAACK,gBAAgB,EAAED,OAAO,CAAC;IACvDN,oCAAoC,CAACO,gBAAgB,EAAED,OAAO,EAAE,cAAc,CAAC;IAC/EN,oCAAoC,CAACO,gBAAgB,EAAED,OAAO,EAAE,cAAc,CAAC;IAC/EN,oCAAoC,CAACO,gBAAgB,EAAED,OAAO,EAAE,cAAc,CAAC;IAC/EN,oCAAoC,CAACO,gBAAgB,EAAED,OAAO,EAAE,WAAW,CAAC;IAC5EN,oCAAoC,CAACO,gBAAgB,EAAED,OAAO,EAAE,WAAW,CAAC;IAC5EN,oCAAoC,CAACO,gBAAgB,EAAED,OAAO,EAAE,WAAW,CAAC;IAC5EL,2BAA2B,CAACM,gBAAgB,EAAED,OAAO,EAAE,gBAAgB,CAAC;IACxEL,2BAA2B,CAACM,gBAAgB,EAAED,OAAO,EAAE,gBAAgB,CAAC;IACxEL,2BAA2B,CAACM,gBAAgB,EAAED,OAAO,EAAE,eAAe,CAAC;IACvEL,2BAA2B,CAACM,gBAAgB,EAAED,OAAO,EAAE,eAAe,CAAC;IACvEL,2BAA2B,CAACM,gBAAgB,EAAED,OAAO,EAAE,aAAa,CAAC;IACrEL,2BAA2B,CAACM,gBAAgB,EAAED,OAAO,EAAE,cAAc,CAAC;IACtEL,2BAA2B,CAACM,gBAAgB,EAAED,OAAO,EAAE,aAAa,CAAC;IACrEL,2BAA2B,CAACM,gBAAgB,EAAED,OAAO,EAAE,eAAe,CAAC;IACvE,OAAOC,gBAAgB;EAC3B,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
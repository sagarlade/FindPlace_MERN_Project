{"ast":null,"code":"/*\n * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods\n * is enough to know if the other one is supported as well.\n */\nexport const createTestAudioBufferCopyChannelMethodsSubarraySupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100);\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (nativeAudioBuffer.copyToChannel === undefined) {\n      return true;\n    }\n    const source = new Float32Array(2);\n    try {\n      nativeAudioBuffer.copyFromChannel(source, 0, 0);\n    } catch {\n      return false;\n    }\n    return true;\n  };\n};","map":{"version":3,"names":["createTestAudioBufferCopyChannelMethodsSubarraySupport","nativeOfflineAudioContextConstructor","nativeOfflineAudioContext","nativeAudioBuffer","createBuffer","copyToChannel","undefined","source","Float32Array","copyFromChannel"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js"],"sourcesContent":["/*\n * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods\n * is enough to know if the other one is supported as well.\n */\nexport const createTestAudioBufferCopyChannelMethodsSubarraySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100);\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        if (nativeAudioBuffer.copyToChannel === undefined) {\n            return true;\n        }\n        const source = new Float32Array(2);\n        try {\n            nativeAudioBuffer.copyFromChannel(source, 0, 0);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-subarray-support.js.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,sDAAsD,GAAIC,oCAAoC,IAAK;EAC5G,OAAO,MAAM;IACT,IAAIA,oCAAoC,KAAK,IAAI,EAAE;MAC/C,OAAO,KAAK;IAChB;IACA,MAAMC,yBAAyB,GAAG,IAAID,oCAAoC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;IACvF,MAAME,iBAAiB,GAAGD,yBAAyB,CAACE,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;IAC7E;IACA,IAAID,iBAAiB,CAACE,aAAa,KAAKC,SAAS,EAAE;MAC/C,OAAO,IAAI;IACf;IACA,MAAMC,MAAM,GAAG,IAAIC,YAAY,CAAC,CAAC,CAAC;IAClC,IAAI;MACAL,iBAAiB,CAACM,eAAe,CAACF,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC,CACD,MAAM;MACF,OAAO,KAAK;IAChB;IACA,OAAO,IAAI;EACf,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
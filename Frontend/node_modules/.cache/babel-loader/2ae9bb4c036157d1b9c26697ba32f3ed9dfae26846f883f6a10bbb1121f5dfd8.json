{"ast":null,"code":"export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n      // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n      super(context, true, nativeMediaStreamAudioSourceNode, null);\n      this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n    }\n    get mediaStream() {\n      return this._nativeMediaStreamAudioSourceNode.mediaStream;\n    }\n  };\n};","map":{"version":3,"names":["createMediaStreamAudioSourceNodeConstructor","audioNodeConstructor","createNativeMediaStreamAudioSourceNode","getNativeContext","isNativeOfflineAudioContext","MediaStreamAudioSourceNode","constructor","context","options","nativeContext","nativeMediaStreamAudioSourceNode","TypeError","_nativeMediaStreamAudioSourceNode","mediaStream"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js"],"sourcesContent":["export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map"],"mappings":"AAAA,OAAO,MAAMA,2CAA2C,GAAGA,CAACC,oBAAoB,EAAEC,sCAAsC,EAAEC,gBAAgB,EAAEC,2BAA2B,KAAK;EACxK,OAAO,MAAMC,0BAA0B,SAASJ,oBAAoB,CAAC;IACjEK,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;MAC1B,MAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAO,CAAC;MAC/C,MAAMG,gCAAgC,GAAGR,sCAAsC,CAACO,aAAa,EAAED,OAAO,CAAC;MACvG;MACA,IAAIJ,2BAA2B,CAACK,aAAa,CAAC,EAAE;QAC5C,MAAM,IAAIE,SAAS,CAAC,CAAC;MACzB;MACA,KAAK,CAACJ,OAAO,EAAE,IAAI,EAAEG,gCAAgC,EAAE,IAAI,CAAC;MAC5D,IAAI,CAACE,iCAAiC,GAAGF,gCAAgC;IAC7E;IACA,IAAIG,WAAWA,CAAA,EAAG;MACd,OAAO,IAAI,CAACD,iCAAiC,CAACC,WAAW;IAC7D;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
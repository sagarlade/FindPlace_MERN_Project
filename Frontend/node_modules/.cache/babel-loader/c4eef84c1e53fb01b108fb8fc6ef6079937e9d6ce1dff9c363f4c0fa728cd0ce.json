{"ast":null,"code":"import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeConvolverNodes = new WeakMap();\n    const createConvolverNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeConvolverNode = getNativeAudioNode(proxy);\n      // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n      const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n      if (!nativeConvolverNodeIsOwnedByContext) {\n        const options = {\n          buffer: nativeConvolverNode.buffer,\n          channelCount: nativeConvolverNode.channelCount,\n          channelCountMode: nativeConvolverNode.channelCountMode,\n          channelInterpretation: nativeConvolverNode.channelInterpretation,\n          disableNormalization: !nativeConvolverNode.normalize\n        };\n        nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n      }\n      renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n      if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n      } else {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n      }\n      return nativeConvolverNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeConvolverNode !== undefined) {\n          return Promise.resolve(renderedNativeConvolverNode);\n        }\n        return createConvolverNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};","map":{"version":3,"names":["isNativeAudioNodeFaker","isOwnedByContext","createConvolverNodeRendererFactory","createNativeConvolverNode","getNativeAudioNode","renderInputsOfAudioNode","renderedNativeConvolverNodes","WeakMap","createConvolverNode","proxy","nativeOfflineAudioContext","nativeConvolverNode","nativeConvolverNodeIsOwnedByContext","options","buffer","channelCount","channelCountMode","channelInterpretation","disableNormalization","normalize","set","inputs","render","renderedNativeConvolverNode","get","undefined","Promise","resolve"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js"],"sourcesContent":["import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=convolver-node-renderer-factory.js.map"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,mCAAmC;AAC1E,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,OAAO,MAAMC,kCAAkC,GAAGA,CAACC,yBAAyB,EAAEC,kBAAkB,EAAEC,uBAAuB,KAAK;EAC1H,OAAO,MAAM;IACT,MAAMC,4BAA4B,GAAG,IAAIC,OAAO,CAAC,CAAC;IAClD,MAAMC,mBAAmB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,yBAAyB,KAAK;MACpE,IAAIC,mBAAmB,GAAGP,kBAAkB,CAACK,KAAK,CAAC;MACnD;MACA,MAAMG,mCAAmC,GAAGX,gBAAgB,CAACU,mBAAmB,EAAED,yBAAyB,CAAC;MAC5G,IAAI,CAACE,mCAAmC,EAAE;QACtC,MAAMC,OAAO,GAAG;UACZC,MAAM,EAAEH,mBAAmB,CAACG,MAAM;UAClCC,YAAY,EAAEJ,mBAAmB,CAACI,YAAY;UAC9CC,gBAAgB,EAAEL,mBAAmB,CAACK,gBAAgB;UACtDC,qBAAqB,EAAEN,mBAAmB,CAACM,qBAAqB;UAChEC,oBAAoB,EAAE,CAACP,mBAAmB,CAACQ;QAC/C,CAAC;QACDR,mBAAmB,GAAGR,yBAAyB,CAACO,yBAAyB,EAAEG,OAAO,CAAC;MACvF;MACAP,4BAA4B,CAACc,GAAG,CAACV,yBAAyB,EAAEC,mBAAmB,CAAC;MAChF,IAAIX,sBAAsB,CAACW,mBAAmB,CAAC,EAAE;QAC7C,MAAMN,uBAAuB,CAACI,KAAK,EAAEC,yBAAyB,EAAEC,mBAAmB,CAACU,MAAM,CAAC,CAAC,CAAC,CAAC;MAClG,CAAC,MACI;QACD,MAAMhB,uBAAuB,CAACI,KAAK,EAAEC,yBAAyB,EAAEC,mBAAmB,CAAC;MACxF;MACA,OAAOA,mBAAmB;IAC9B,CAAC;IACD,OAAO;MACHW,MAAMA,CAACb,KAAK,EAAEC,yBAAyB,EAAE;QACrC,MAAMa,2BAA2B,GAAGjB,4BAA4B,CAACkB,GAAG,CAACd,yBAAyB,CAAC;QAC/F,IAAIa,2BAA2B,KAAKE,SAAS,EAAE;UAC3C,OAAOC,OAAO,CAACC,OAAO,CAACJ,2BAA2B,CAAC;QACvD;QACA,OAAOf,mBAAmB,CAACC,KAAK,EAAEC,yBAAyB,CAAC;MAChE;IACJ,CAAC;EACL,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
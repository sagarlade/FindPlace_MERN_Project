{"ast":null,"code":"export const createMediaRecorderConstructor = (createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, eventTargetConstructor, nativeMediaRecorderConstructor) => {\n  return class MediaRecorder extends eventTargetConstructor {\n    constructor(stream, options = {}) {\n      const {\n        mimeType\n      } = options;\n      if (nativeMediaRecorderConstructor !== null && (\n      // Bug #10: Safari does not yet implement the isTypeSupported() method.\n      mimeType === undefined || nativeMediaRecorderConstructor.isTypeSupported !== undefined && nativeMediaRecorderConstructor.isTypeSupported(mimeType))) {\n        const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n        super(internalMediaRecorder);\n        this._internalMediaRecorder = internalMediaRecorder;\n      } else if (mimeType !== undefined && encoderRegexes.some(regex => regex.test(mimeType))) {\n        super();\n        // Bug #10: Safari does not yet implement the isTypeSupported() method.\n        if (nativeMediaRecorderConstructor !== null && nativeMediaRecorderConstructor.isTypeSupported !== undefined && nativeMediaRecorderConstructor.isTypeSupported('audio/webm;codecs=pcm')) {\n          this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);\n        } else {\n          this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);\n        }\n      } else {\n        // This is creating a native MediaRecorder just to provoke it to throw an error.\n        if (nativeMediaRecorderConstructor !== null) {\n          createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n        }\n        throw createNotSupportedError();\n      }\n      this._ondataavailable = null;\n      this._onerror = null;\n      this._onpause = null;\n      this._onresume = null;\n      this._onstart = null;\n      this._onstop = null;\n    }\n    get mimeType() {\n      return this._internalMediaRecorder.mimeType;\n    }\n    get ondataavailable() {\n      return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];\n    }\n    set ondataavailable(value) {\n      if (this._ondataavailable !== null) {\n        this.removeEventListener('dataavailable', this._ondataavailable[1]);\n      }\n      if (typeof value === 'function') {\n        const boundListener = value.bind(this);\n        this.addEventListener('dataavailable', boundListener);\n        this._ondataavailable = [value, boundListener];\n      } else {\n        this._ondataavailable = null;\n      }\n    }\n    get onerror() {\n      return this._onerror === null ? this._onerror : this._onerror[0];\n    }\n    set onerror(value) {\n      if (this._onerror !== null) {\n        this.removeEventListener('error', this._onerror[1]);\n      }\n      if (typeof value === 'function') {\n        const boundListener = value.bind(this);\n        this.addEventListener('error', boundListener);\n        this._onerror = [value, boundListener];\n      } else {\n        this._onerror = null;\n      }\n    }\n    get onpause() {\n      return this._onpause === null ? this._onpause : this._onpause[0];\n    }\n    set onpause(value) {\n      if (this._onpause !== null) {\n        this.removeEventListener('pause', this._onpause[1]);\n      }\n      if (typeof value === 'function') {\n        const boundListener = value.bind(this);\n        this.addEventListener('pause', boundListener);\n        this._onpause = [value, boundListener];\n      } else {\n        this._onpause = null;\n      }\n    }\n    get onresume() {\n      return this._onresume === null ? this._onresume : this._onresume[0];\n    }\n    set onresume(value) {\n      if (this._onresume !== null) {\n        this.removeEventListener('resume', this._onresume[1]);\n      }\n      if (typeof value === 'function') {\n        const boundListener = value.bind(this);\n        this.addEventListener('resume', boundListener);\n        this._onresume = [value, boundListener];\n      } else {\n        this._onresume = null;\n      }\n    }\n    get onstart() {\n      return this._onstart === null ? this._onstart : this._onstart[0];\n    }\n    set onstart(value) {\n      if (this._onstart !== null) {\n        this.removeEventListener('start', this._onstart[1]);\n      }\n      if (typeof value === 'function') {\n        const boundListener = value.bind(this);\n        this.addEventListener('start', boundListener);\n        this._onstart = [value, boundListener];\n      } else {\n        this._onstart = null;\n      }\n    }\n    get onstop() {\n      return this._onstop === null ? this._onstop : this._onstop[0];\n    }\n    set onstop(value) {\n      if (this._onstop !== null) {\n        this.removeEventListener('stop', this._onstop[1]);\n      }\n      if (typeof value === 'function') {\n        const boundListener = value.bind(this);\n        this.addEventListener('stop', boundListener);\n        this._onstop = [value, boundListener];\n      } else {\n        this._onstop = null;\n      }\n    }\n    get state() {\n      return this._internalMediaRecorder.state;\n    }\n    pause() {\n      return this._internalMediaRecorder.pause();\n    }\n    resume() {\n      return this._internalMediaRecorder.resume();\n    }\n    start(timeslice) {\n      return this._internalMediaRecorder.start(timeslice);\n    }\n    stop() {\n      return this._internalMediaRecorder.stop();\n    }\n    static isTypeSupported(mimeType) {\n      return nativeMediaRecorderConstructor !== null &&\n      // Bug #10: Safari does not yet implement the isTypeSupported() method.\n      nativeMediaRecorderConstructor.isTypeSupported !== undefined && nativeMediaRecorderConstructor.isTypeSupported(mimeType) || encoderRegexes.some(regex => regex.test(mimeType));\n    }\n  };\n};","map":{"version":3,"names":["createMediaRecorderConstructor","createNativeMediaRecorder","createNotSupportedError","createWebAudioMediaRecorder","createWebmPcmMediaRecorder","encoderRegexes","eventTargetConstructor","nativeMediaRecorderConstructor","MediaRecorder","constructor","stream","options","mimeType","undefined","isTypeSupported","internalMediaRecorder","_internalMediaRecorder","some","regex","test","_ondataavailable","_onerror","_onpause","_onresume","_onstart","_onstop","ondataavailable","value","removeEventListener","boundListener","bind","addEventListener","onerror","onpause","onresume","onstart","onstop","state","pause","resume","start","timeslice","stop"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/extendable-media-recorder/build/es2019/factories/media-recorder-constructor.js"],"sourcesContent":["export const createMediaRecorderConstructor = (createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, eventTargetConstructor, nativeMediaRecorderConstructor) => {\n    return class MediaRecorder extends eventTargetConstructor {\n        constructor(stream, options = {}) {\n            const { mimeType } = options;\n            if (nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                (mimeType === undefined ||\n                    (nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                        nativeMediaRecorderConstructor.isTypeSupported(mimeType)))) {\n                const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                super(internalMediaRecorder);\n                this._internalMediaRecorder = internalMediaRecorder;\n            }\n            else if (mimeType !== undefined && encoderRegexes.some((regex) => regex.test(mimeType))) {\n                super();\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                if (nativeMediaRecorderConstructor !== null &&\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported('audio/webm;codecs=pcm')) {\n                    this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);\n                }\n                else {\n                    this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);\n                }\n            }\n            else {\n                // This is creating a native MediaRecorder just to provoke it to throw an error.\n                if (nativeMediaRecorderConstructor !== null) {\n                    createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                }\n                throw createNotSupportedError();\n            }\n            this._ondataavailable = null;\n            this._onerror = null;\n            this._onpause = null;\n            this._onresume = null;\n            this._onstart = null;\n            this._onstop = null;\n        }\n        get mimeType() {\n            return this._internalMediaRecorder.mimeType;\n        }\n        get ondataavailable() {\n            return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];\n        }\n        set ondataavailable(value) {\n            if (this._ondataavailable !== null) {\n                this.removeEventListener('dataavailable', this._ondataavailable[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('dataavailable', boundListener);\n                this._ondataavailable = [value, boundListener];\n            }\n            else {\n                this._ondataavailable = null;\n            }\n        }\n        get onerror() {\n            return this._onerror === null ? this._onerror : this._onerror[0];\n        }\n        set onerror(value) {\n            if (this._onerror !== null) {\n                this.removeEventListener('error', this._onerror[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('error', boundListener);\n                this._onerror = [value, boundListener];\n            }\n            else {\n                this._onerror = null;\n            }\n        }\n        get onpause() {\n            return this._onpause === null ? this._onpause : this._onpause[0];\n        }\n        set onpause(value) {\n            if (this._onpause !== null) {\n                this.removeEventListener('pause', this._onpause[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('pause', boundListener);\n                this._onpause = [value, boundListener];\n            }\n            else {\n                this._onpause = null;\n            }\n        }\n        get onresume() {\n            return this._onresume === null ? this._onresume : this._onresume[0];\n        }\n        set onresume(value) {\n            if (this._onresume !== null) {\n                this.removeEventListener('resume', this._onresume[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('resume', boundListener);\n                this._onresume = [value, boundListener];\n            }\n            else {\n                this._onresume = null;\n            }\n        }\n        get onstart() {\n            return this._onstart === null ? this._onstart : this._onstart[0];\n        }\n        set onstart(value) {\n            if (this._onstart !== null) {\n                this.removeEventListener('start', this._onstart[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('start', boundListener);\n                this._onstart = [value, boundListener];\n            }\n            else {\n                this._onstart = null;\n            }\n        }\n        get onstop() {\n            return this._onstop === null ? this._onstop : this._onstop[0];\n        }\n        set onstop(value) {\n            if (this._onstop !== null) {\n                this.removeEventListener('stop', this._onstop[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('stop', boundListener);\n                this._onstop = [value, boundListener];\n            }\n            else {\n                this._onstop = null;\n            }\n        }\n        get state() {\n            return this._internalMediaRecorder.state;\n        }\n        pause() {\n            return this._internalMediaRecorder.pause();\n        }\n        resume() {\n            return this._internalMediaRecorder.resume();\n        }\n        start(timeslice) {\n            return this._internalMediaRecorder.start(timeslice);\n        }\n        stop() {\n            return this._internalMediaRecorder.stop();\n        }\n        static isTypeSupported(mimeType) {\n            return ((nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                nativeMediaRecorderConstructor.isTypeSupported(mimeType)) ||\n                encoderRegexes.some((regex) => regex.test(mimeType)));\n        }\n    };\n};\n//# sourceMappingURL=media-recorder-constructor.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
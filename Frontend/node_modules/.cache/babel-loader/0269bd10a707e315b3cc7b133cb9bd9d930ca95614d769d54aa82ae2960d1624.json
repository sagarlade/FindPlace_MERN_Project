{"ast":null,"code":"import { PORT_MAP } from './port-map';\nexport const extendBrokerImplementation = partialBrokerImplementation => ({\n  ...partialBrokerImplementation,\n  connect: ({\n    call\n  }) => {\n    return async () => {\n      const {\n        port1,\n        port2\n      } = new MessageChannel();\n      const portId = await call('connect', {\n        port: port1\n      }, [port1]);\n      PORT_MAP.set(port2, portId);\n      return port2;\n    };\n  },\n  disconnect: ({\n    call\n  }) => {\n    return async port => {\n      const portId = PORT_MAP.get(port);\n      if (portId === undefined) {\n        throw new Error('The given port is not connected.');\n      }\n      await call('disconnect', {\n        portId\n      });\n    };\n  },\n  isSupported: ({\n    call\n  }) => {\n    return () => call('isSupported');\n  }\n});","map":{"version":3,"names":["PORT_MAP","extendBrokerImplementation","partialBrokerImplementation","connect","call","port1","port2","MessageChannel","portId","port","set","disconnect","get","undefined","Error","isSupported"],"sources":["../../../src/helpers/extend-broker-implementation.ts"],"sourcesContent":[null],"mappings":"AAGA,SAASA,QAAQ,QAAQ,YAAY;AAErC,OAAO,MAAMC,0BAA0B,GACnCC,2BAAwD,KAEA;EACpD,GAAGA,2BAA2B;EAC9BC,OAAO,EAAEA,CAAC;IAAEC;EAAI,CAAE,KAAI;IAClB,OAAO,YAAiC;MACpC,MAAM;QAAEC,KAAK;QAAEC;MAAK,CAAE,GAAG,IAAIC,cAAc,EAAE;MAE7C,MAAMC,MAAM,GAAW,MAAMJ,IAAI,CAAC,SAAS,EAAE;QAAEK,IAAI,EAAEJ;MAAK,CAAE,EAAE,CAACA,KAAK,CAAC,CAAC;MAEtEL,QAAQ,CAACU,GAAG,CAACJ,KAAK,EAAEE,MAAM,CAAC;MAE3B,OAAOF,KAAK;IAChB,CAAC;EACL,CAAC;EACDK,UAAU,EAAEA,CAAC;IAAEP;EAAI,CAAE,KAAI;IACrB,OAAO,MAAOK,IAAiB,IAAmB;MAC9C,MAAMD,MAAM,GAAGR,QAAQ,CAACY,GAAG,CAACH,IAAI,CAAC;MAEjC,IAAID,MAAM,KAAKK,SAAS,EAAE;QACtB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;;MAGvD,MAAMV,IAAI,CAAC,YAAY,EAAE;QAAEI;MAAM,CAAE,CAAC;IACxC,CAAC;EACL,CAAC;EACDO,WAAW,EAAEA,CAAC;IAAEX;EAAI,CAAE,KAAI;IACtB,OAAO,MAAMA,IAAI,CAAC,aAAa,CAAC;EACpC;CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const DEFAULT_OPTIONS = {\n  disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n  return class PeriodicWave {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = sanitizePeriodicWaveOptions({\n        ...DEFAULT_OPTIONS,\n        ...options\n      });\n      const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n      periodicWaveStore.add(periodicWave);\n      // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n      return periodicWave;\n    }\n    static [Symbol.hasInstance](instance) {\n      return instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);\n    }\n  };\n};","map":{"version":3,"names":["DEFAULT_OPTIONS","disableNormalization","createPeriodicWaveConstructor","createNativePeriodicWave","getNativeContext","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","constructor","context","options","nativeContext","mergedOptions","periodicWave","add","Symbol","hasInstance","instance","Object","getPrototypeOf","prototype","has"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js"],"sourcesContent":["const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map"],"mappings":"AAAA,MAAMA,eAAe,GAAG;EACpBC,oBAAoB,EAAE;AAC1B,CAAC;AACD,OAAO,MAAMC,6BAA6B,GAAGA,CAACC,wBAAwB,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,2BAA2B,KAAK;EACzI,OAAO,MAAMC,YAAY,CAAC;IACtBC,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;MAC1B,MAAMC,aAAa,GAAGP,gBAAgB,CAACK,OAAO,CAAC;MAC/C,MAAMG,aAAa,GAAGN,2BAA2B,CAAC;QAAE,GAAGN,eAAe;QAAE,GAAGU;MAAQ,CAAC,CAAC;MACrF,MAAMG,YAAY,GAAGV,wBAAwB,CAACQ,aAAa,EAAEC,aAAa,CAAC;MAC3EP,iBAAiB,CAACS,GAAG,CAACD,YAAY,CAAC;MACnC;MACA,OAAOA,YAAY;IACvB;IACA,QAAQE,MAAM,CAACC,WAAW,EAAEC,QAAQ,EAAE;MAClC,OAASA,QAAQ,KAAK,IAAI,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIC,MAAM,CAACC,cAAc,CAACF,QAAQ,CAAC,KAAKV,YAAY,CAACa,SAAS,IACpHf,iBAAiB,CAACgB,GAAG,CAACJ,QAAQ,CAAC;IACvC;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
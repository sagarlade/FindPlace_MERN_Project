{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santosh Lade\\\\Desktop\\\\MERN App\\\\client\\\\src\\\\components\\\\ScreenRecording\\\\index.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Row, Col, Button, Badge } from \"antd\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport Text from \"antd/lib/typography/Text\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScreenRecording = ({\n  screen,\n  audio,\n  video,\n  downloadRecordingPath,\n  downloadRecordingType\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [recordingNumber, setRecordingNumber] = useState(0);\n  const [status, setStatus] = useState(\"\");\n  const [mediaBlobUrl, setMediaBlobUrl] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const startRecording = () => {\n    _s();\n    const {\n      startRecording\n    } = useReactMediaRecorder({\n      screen,\n      audio,\n      video\n    });\n    startRecording();\n    setStatus(\"recording\");\n  };\n  _s(startRecording, \"E1u08dpWa8U0RtMA0cRbKJakrCw=\", false, function () {\n    return [useReactMediaRecorder];\n  });\n  const handleStopRecording = async () => {\n    try {\n      const currentTimeStamp = new Date().getTime();\n      setRecordingNumber(currentTimeStamp);\n      await stopRecording();\n      setStatus(\"stopped\");\n      setMediaBlobUrl(recordedMediaBlobUrl);\n      const recordingData = {\n        url: recordedMediaBlobUrl,\n        timestamp: currentTimeStamp\n      };\n      const url = \"http://localhost:8080/api/recordings\"; // Replace with your backend URL\n      await axios.post(url, recordingData);\n      console.log(\"Recording saved successfully\");\n    } catch (error) {\n      setError(\"An error occurred while stopping recording.\");\n      console.error(error);\n    }\n  };\n  const viewRecording = () => {\n    window.open(mediaBlobUrl, \"_blank\").focus();\n  };\n  const downloadRecording = () => {\n    const pathName = `${downloadRecordingPath}_${recordingNumber}.${downloadRecordingType}`;\n    try {\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n        window.navigator.msSaveOrOpenBlob(mediaBlobUrl, pathName);\n      } else {\n        const link = document.createElement(\"a\");\n        link.href = mediaBlobUrl;\n        link.download = pathName;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      span: \"12\",\n      style: {\n        lineHeight: \"24px\"\n      },\n      children: [status && status !== \"stopped\" && /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Screen Recording Status: \", status && status.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), status && status === \"recording\" && /*#__PURE__*/_jsxDEV(Badge, {\n        className: \"screen-recording-badge\",\n        color: \"#faad14\",\n        status: \"processing\",\n        offset: [2, 0],\n        style: {\n          marginLeft: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      span: \"12\",\n      style: {\n        textAlign: \"right\"\n      },\n      children: [status && status !== \"recording\" && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: startRecording,\n        type: \"primary\",\n        icon: \"play-circle\",\n        className: \"margin-left-sm\",\n        ghost: true,\n        children: mediaBlobUrl ? \"Record again\" : \"Record your Problem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), status && status === \"recording\" && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: stopRecording,\n        type: \"danger\",\n        icon: \"stop\",\n        className: \"margin-left-sm\",\n        ghost: true,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), mediaBlobUrl && status && status === \"stopped\" && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: viewRecording,\n        type: \"primary\",\n        icon: \"picture\",\n        className: \"viewRecording margin-left-sm\",\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), downloadRecordingType && mediaBlobUrl && status && status === \"stopped\" && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: downloadRecording,\n        type: \"primary\",\n        icon: \"download\",\n        className: \"downloadRecording margin-left-sm\",\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s2(ScreenRecording, \"UuX2ptu92Gd7zwt3M/r/FJZSiRY=\");\n_c = ScreenRecording;\nexport default ScreenRecording;\nvar _c;\n$RefreshReg$(_c, \"ScreenRecording\");","map":{"version":3,"names":["React","useState","Row","Col","Button","Badge","useReactMediaRecorder","Text","axios","jsxDEV","_jsxDEV","ScreenRecording","screen","audio","video","downloadRecordingPath","downloadRecordingType","_s2","_s","$RefreshSig$","recordingNumber","setRecordingNumber","status","setStatus","mediaBlobUrl","setMediaBlobUrl","error","setError","startRecording","handleStopRecording","currentTimeStamp","Date","getTime","stopRecording","recordedMediaBlobUrl","recordingData","url","timestamp","post","console","log","viewRecording","window","open","focus","downloadRecording","pathName","navigator","msSaveOrOpenBlob","link","document","createElement","href","download","body","appendChild","click","removeChild","err","children","span","style","lineHeight","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","className","color","offset","marginLeft","textAlign","size","onClick","type","icon","ghost","_c","$RefreshReg$"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/src/components/ScreenRecording/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Badge } from \"antd\";\r\nimport { useReactMediaRecorder } from \"react-media-recorder\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport axios from \"axios\";\r\n\r\nconst ScreenRecording = ({\r\n  screen,\r\n  audio,\r\n  video,\r\n  downloadRecordingPath,\r\n  downloadRecordingType,\r\n}) => {\r\n  const [recordingNumber, setRecordingNumber] = useState(0);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [mediaBlobUrl, setMediaBlobUrl] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const startRecording = () => {\r\n    const { startRecording } = useReactMediaRecorder({ screen, audio, video });\r\n    startRecording();\r\n    setStatus(\"recording\");\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    try {\r\n      const currentTimeStamp = new Date().getTime();\r\n      setRecordingNumber(currentTimeStamp);\r\n\r\n      await stopRecording();\r\n      setStatus(\"stopped\");\r\n      setMediaBlobUrl(recordedMediaBlobUrl);\r\n\r\n      const recordingData = {\r\n        url: recordedMediaBlobUrl,\r\n        timestamp: currentTimeStamp,\r\n      };\r\n      const url = \"http://localhost:8080/api/recordings\"; // Replace with your backend URL\r\n      await axios.post(url, recordingData);\r\n      console.log(\"Recording saved successfully\");\r\n    } catch (error) {\r\n      setError(\"An error occurred while stopping recording.\");\r\n      console.error(error);\r\n    }\r\n  };\r\n  const viewRecording = () => {\r\n    window.open(mediaBlobUrl, \"_blank\").focus();\r\n  };\r\n\r\n  const downloadRecording = () => {\r\n    const pathName = `${downloadRecordingPath}_${recordingNumber}.${downloadRecordingType}`;\r\n    try {\r\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        window.navigator.msSaveOrOpenBlob(mediaBlobUrl, pathName);\r\n      } else {\r\n        const link = document.createElement(\"a\");\r\n        link.href = mediaBlobUrl;\r\n        link.download = pathName;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col span=\"12\" style={{ lineHeight: \"24px\" }}>\r\n        {status && status !== \"stopped\" && (\r\n          <Text>\r\n            Screen Recording Status: {status && status.toUpperCase()}\r\n          </Text>\r\n        )}\r\n        {status && status === \"recording\" && (\r\n          <Badge\r\n            className=\"screen-recording-badge\"\r\n            color=\"#faad14\"\r\n            status=\"processing\"\r\n            offset={[2, 0]}\r\n            style={{\r\n              marginLeft: \"5px\",\r\n            }}\r\n          />\r\n        )}\r\n      </Col>\r\n      <Col span=\"12\" style={{ textAlign: \"right\" }}>\r\n        {status && status !== \"recording\" && (\r\n          <Button\r\n            size=\"small\"\r\n            onClick={startRecording}\r\n            type=\"primary\"\r\n            icon=\"play-circle\"\r\n            className=\"margin-left-sm\"\r\n            ghost\r\n          >\r\n            {mediaBlobUrl ? \"Record again\" : \"Record your Problem\"}\r\n          </Button>\r\n        )}\r\n        {status && status === \"recording\" && (\r\n          <Button\r\n            size=\"small\"\r\n            onClick={stopRecording}\r\n            type=\"danger\"\r\n            icon=\"stop\"\r\n            className=\"margin-left-sm\"\r\n            ghost\r\n          >\r\n            Stop Recording\r\n          </Button>\r\n        )}\r\n        {mediaBlobUrl && status && status === \"stopped\" && (\r\n          <Button\r\n            size=\"small\"\r\n            onClick={viewRecording}\r\n            type=\"primary\"\r\n            icon=\"picture\"\r\n            className=\"viewRecording margin-left-sm\"\r\n          >\r\n            View\r\n          </Button>\r\n        )}\r\n        {downloadRecordingType &&\r\n          mediaBlobUrl &&\r\n          status &&\r\n          status === \"stopped\" && (\r\n            <Button\r\n              size=\"small\"\r\n              onClick={downloadRecording}\r\n              type=\"primary\"\r\n              icon=\"download\"\r\n              className=\"downloadRecording margin-left-sm\"\r\n            >\r\n              Download\r\n            </Button>\r\n          )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\n\r\nexport default ScreenRecording;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
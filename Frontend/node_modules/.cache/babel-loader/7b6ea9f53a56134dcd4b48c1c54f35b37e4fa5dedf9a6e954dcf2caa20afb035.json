{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santosh Lade\\\\Desktop\\\\MERN App\\\\client\\\\src\\\\components\\\\ScreenRecording\\\\ScreenRecording.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // Import axios if needed\nimport styles from \"./styles.module.css\"; // Import your styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScreenRecordingApp() {\n  _s();\n  const [currentSessionId, setCurrentSessionId] = useState(null);\n  const [startButtonDisabled, setStartButtonDisabled] = useState(false);\n  const [stopButtonDisabled, setStopButtonDisabled] = useState(true);\n  const [restartButtonDisabled, setRestartButtonDisabled] = useState(true);\n  const handleStartRecording = async () => {\n    try {\n      const response = await axios.post(\"/start-recording\"); // Adjust URL if needed\n      const data = response.data;\n      setCurrentSessionId(data.sessionId);\n      setStartButtonDisabled(true);\n      setStopButtonDisabled(false);\n      setRestartButtonDisabled(true);\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n    }\n  };\n  const handleStopRecording = async () => {\n    try {\n      await axios.post(`/stop-recording/${currentSessionId}`); // Adjust URL if needed\n      setCurrentSessionId(null);\n      setStartButtonDisabled(false);\n      setStopButtonDisabled(true);\n      setRestartButtonDisabled(false);\n    } catch (error) {\n      console.error(\"Error stopping recording:\", error);\n    }\n  };\n\n  // Add logic for restarting recording\n  const handleRestartRecording = async () => {\n    try {} catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: startButtonDisabled,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: stopButtonDisabled,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestartRecording,\n      disabled: restartButtonDisabled,\n      children: \"Restart Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ScreenRecordingApp, \"oQ6OINDZs0hLWIE4x737d9rwfPY=\");\n_c = ScreenRecordingApp;\nexport default ScreenRecordingApp;\nvar _c;\n$RefreshReg$(_c, \"ScreenRecordingApp\");","map":{"version":3,"names":["React","useState","axios","styles","jsxDEV","_jsxDEV","ScreenRecordingApp","_s","currentSessionId","setCurrentSessionId","startButtonDisabled","setStartButtonDisabled","stopButtonDisabled","setStopButtonDisabled","restartButtonDisabled","setRestartButtonDisabled","handleStartRecording","response","post","data","sessionId","error","console","handleStopRecording","handleRestartRecording","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/src/components/ScreenRecording/ScreenRecording.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\"; // Import axios if needed\r\nimport styles from \"./styles.module.css\"; // Import your styles\r\n\r\nfunction ScreenRecordingApp() {\r\n  const [currentSessionId, setCurrentSessionId] = useState(null);\r\n  const [startButtonDisabled, setStartButtonDisabled] = useState(false);\r\n  const [stopButtonDisabled, setStopButtonDisabled] = useState(true);\r\n  const [restartButtonDisabled, setRestartButtonDisabled] = useState(true);\r\n\r\n  const handleStartRecording = async () => {\r\n    try {\r\n      const response = await axios.post(\"/start-recording\"); // Adjust URL if needed\r\n      const data = response.data;\r\n      setCurrentSessionId(data.sessionId);\r\n      setStartButtonDisabled(true);\r\n      setStopButtonDisabled(false);\r\n      setRestartButtonDisabled(true);\r\n    } catch (error) {\r\n      console.error(\"Error starting recording:\", error);\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    try {\r\n      await axios.post(`/stop-recording/${currentSessionId}`); // Adjust URL if needed\r\n      setCurrentSessionId(null);\r\n      setStartButtonDisabled(false);\r\n      setStopButtonDisabled(true);\r\n      setRestartButtonDisabled(false);\r\n    } catch (error) {\r\n      console.error(\"Error stopping recording:\", error);\r\n    }\r\n  };\r\n\r\n  // Add logic for restarting recording\r\n  const handleRestartRecording = async()=>{\r\n    try {\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleStartRecording} disabled={startButtonDisabled}>\r\n        Start Recording\r\n      </button>\r\n      <button onClick={handleStopRecording} disabled={stopButtonDisabled}>\r\n        Stop Recording\r\n      </button>\r\n      <button onClick={handleRestartRecording} disabled={restartButtonDisabled}>\r\n        Restart Recording\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenRecordingApp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACS,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACa,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExE,MAAMe,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;MACvD,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAC1BV,mBAAmB,CAACU,IAAI,CAACC,SAAS,CAAC;MACnCT,sBAAsB,CAAC,IAAI,CAAC;MAC5BE,qBAAqB,CAAC,KAAK,CAAC;MAC5BE,wBAAwB,CAAC,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMrB,KAAK,CAACgB,IAAI,CAAE,mBAAkBV,gBAAiB,EAAC,CAAC,CAAC,CAAC;MACzDC,mBAAmB,CAAC,IAAI,CAAC;MACzBE,sBAAsB,CAAC,KAAK,CAAC;MAC7BE,qBAAqB,CAAC,IAAI,CAAC;MAC3BE,wBAAwB,CAAC,KAAK,CAAC;IACjC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMG,sBAAsB,GAAG,MAAAA,CAAA,KAAS;IACtC,IAAI,CAEJ,CAAC,CAAC,OAAOH,KAAK,EAAE,CAEhB;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAQqB,OAAO,EAAEV,oBAAqB;MAACW,QAAQ,EAAEjB,mBAAoB;MAAAe,QAAA,EAAC;IAEtE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT1B,OAAA;MAAQqB,OAAO,EAAEH,mBAAoB;MAACI,QAAQ,EAAEf,kBAAmB;MAAAa,QAAA,EAAC;IAEpE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT1B,OAAA;MAAQqB,OAAO,EAAEF,sBAAuB;MAACG,QAAQ,EAAEb,qBAAsB;MAAAW,QAAA,EAAC;IAE1E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxB,EAAA,CArDQD,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AAuD3B,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
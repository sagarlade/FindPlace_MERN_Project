{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _internal = require(\"../../theme/internal\");\nvar _compact = _interopRequireDefault(require(\"./compact\"));\nconst genSpaceStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'inline-flex',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-align': {\n        flexDirection: 'column',\n        '&-center': {\n          alignItems: 'center'\n        },\n        '&-start': {\n          alignItems: 'flex-start'\n        },\n        '&-end': {\n          alignItems: 'flex-end'\n        },\n        '&-baseline': {\n          alignItems: 'baseline'\n        }\n      },\n      [`${componentCls}-item:empty`]: {\n        display: 'none'\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nvar _default = (0, _internal.genComponentStyleHook)('Space', token => [genSpaceStyle(token), (0, _compact.default)(token)], () => ({}), {\n  // Space component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/40315\n  resetStyle: false\n});\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","_internal","_compact","genSpaceStyle","token","componentCls","display","direction","flexDirection","alignItems","_default","genComponentStyleHook","resetStyle"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/antd/lib/space/style/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _internal = require(\"../../theme/internal\");\nvar _compact = _interopRequireDefault(require(\"./compact\"));\nconst genSpaceStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'inline-flex',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-align': {\n        flexDirection: 'column',\n        '&-center': {\n          alignItems: 'center'\n        },\n        '&-start': {\n          alignItems: 'flex-start'\n        },\n        '&-end': {\n          alignItems: 'flex-end'\n        },\n        '&-baseline': {\n          alignItems: 'baseline'\n        }\n      },\n      [`${componentCls}-item:empty`]: {\n        display: 'none'\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nvar _default = (0, _internal.genComponentStyleHook)('Space', token => [genSpaceStyle(token), (0, _compact.default)(token)], () => ({}), {\n  // Space component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/40315\n  resetStyle: false\n});\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAC5FC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACH,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIK,SAAS,GAAGN,OAAO,CAAC,sBAAsB,CAAC;AAC/C,IAAIO,QAAQ,GAAGR,sBAAsB,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC3D,MAAMQ,aAAa,GAAGC,KAAK,IAAI;EAC7B,MAAM;IACJC;EACF,CAAC,GAAGD,KAAK;EACT,OAAO;IACL,CAACC,YAAY,GAAG;MACdC,OAAO,EAAE,aAAa;MACtB,OAAO,EAAE;QACPC,SAAS,EAAE;MACb,CAAC;MACD,YAAY,EAAE;QACZC,aAAa,EAAE;MACjB,CAAC;MACD,SAAS,EAAE;QACTA,aAAa,EAAE,QAAQ;QACvB,UAAU,EAAE;UACVC,UAAU,EAAE;QACd,CAAC;QACD,SAAS,EAAE;UACTA,UAAU,EAAE;QACd,CAAC;QACD,OAAO,EAAE;UACPA,UAAU,EAAE;QACd,CAAC;QACD,YAAY,EAAE;UACZA,UAAU,EAAE;QACd;MACF,CAAC;MACD,CAAE,GAAEJ,YAAa,aAAY,GAAG;QAC9BC,OAAO,EAAE;MACX;IACF;EACF,CAAC;AACH,CAAC;AACD;AACA,IAAII,QAAQ,GAAG,CAAC,CAAC,EAAET,SAAS,CAACU,qBAAqB,EAAE,OAAO,EAAEP,KAAK,IAAI,CAACD,aAAa,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAEF,QAAQ,CAACN,OAAO,EAAEQ,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE;EACtI;EACA;EACAQ,UAAU,EAAE;AACd,CAAC,CAAC;AACFb,OAAO,CAACH,OAAO,GAAGc,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n  return class MinimalBaseAudioContext extends eventTargetConstructor {\n    constructor(_nativeContext, numberOfChannels) {\n      super(_nativeContext);\n      this._nativeContext = _nativeContext;\n      CONTEXT_STORE.set(this, _nativeContext);\n      if (isNativeOfflineAudioContext(_nativeContext)) {\n        unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n      }\n      this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n      this._listener = createAudioListener(this, _nativeContext);\n      this._onstatechange = null;\n    }\n    get currentTime() {\n      return this._nativeContext.currentTime;\n    }\n    get destination() {\n      return this._destination;\n    }\n    get listener() {\n      return this._listener;\n    }\n    get onstatechange() {\n      return this._onstatechange;\n    }\n    set onstatechange(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeContext.onstatechange = wrappedListener;\n      const nativeOnStateChange = this._nativeContext.onstatechange;\n      this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n    }\n    get sampleRate() {\n      return this._nativeContext.sampleRate;\n    }\n    get state() {\n      return this._nativeContext.state;\n    }\n  };\n};","map":{"version":3,"names":["CONTEXT_STORE","createMinimalBaseAudioContextConstructor","audioDestinationNodeConstructor","createAudioListener","eventTargetConstructor","isNativeOfflineAudioContext","unrenderedAudioWorkletNodeStore","wrapEventListener","MinimalBaseAudioContext","constructor","_nativeContext","numberOfChannels","set","Set","_destination","_listener","_onstatechange","currentTime","destination","listener","onstatechange","value","wrappedListener","nativeOnStateChange","sampleRate","state"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js"],"sourcesContent":["import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map"],"mappings":"AAAA,SAASA,aAAa,QAAQ,YAAY;AAC1C,OAAO,MAAMC,wCAAwC,GAAGA,CAACC,+BAA+B,EAAEC,mBAAmB,EAAEC,sBAAsB,EAAEC,2BAA2B,EAAEC,+BAA+B,EAAEC,iBAAiB,KAAK;EACvN,OAAO,MAAMC,uBAAuB,SAASJ,sBAAsB,CAAC;IAChEK,WAAWA,CAACC,cAAc,EAAEC,gBAAgB,EAAE;MAC1C,KAAK,CAACD,cAAc,CAAC;MACrB,IAAI,CAACA,cAAc,GAAGA,cAAc;MACpCV,aAAa,CAACY,GAAG,CAAC,IAAI,EAAEF,cAAc,CAAC;MACvC,IAAIL,2BAA2B,CAACK,cAAc,CAAC,EAAE;QAC7CJ,+BAA+B,CAACM,GAAG,CAACF,cAAc,EAAE,IAAIG,GAAG,CAAC,CAAC,CAAC;MAClE;MACA,IAAI,CAACC,YAAY,GAAG,IAAIZ,+BAA+B,CAAC,IAAI,EAAES,gBAAgB,CAAC;MAC/E,IAAI,CAACI,SAAS,GAAGZ,mBAAmB,CAAC,IAAI,EAAEO,cAAc,CAAC;MAC1D,IAAI,CAACM,cAAc,GAAG,IAAI;IAC9B;IACA,IAAIC,WAAWA,CAAA,EAAG;MACd,OAAO,IAAI,CAACP,cAAc,CAACO,WAAW;IAC1C;IACA,IAAIC,WAAWA,CAAA,EAAG;MACd,OAAO,IAAI,CAACJ,YAAY;IAC5B;IACA,IAAIK,QAAQA,CAAA,EAAG;MACX,OAAO,IAAI,CAACJ,SAAS;IACzB;IACA,IAAIK,aAAaA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACJ,cAAc;IAC9B;IACA,IAAII,aAAaA,CAACC,KAAK,EAAE;MACrB,MAAMC,eAAe,GAAG,OAAOD,KAAK,KAAK,UAAU,GAAGd,iBAAiB,CAAC,IAAI,EAAEc,KAAK,CAAC,GAAG,IAAI;MAC3F,IAAI,CAACX,cAAc,CAACU,aAAa,GAAGE,eAAe;MACnD,MAAMC,mBAAmB,GAAG,IAAI,CAACb,cAAc,CAACU,aAAa;MAC7D,IAAI,CAACJ,cAAc,GAAGO,mBAAmB,KAAK,IAAI,IAAIA,mBAAmB,KAAKD,eAAe,GAAGD,KAAK,GAAGE,mBAAmB;IAC/H;IACA,IAAIC,UAAUA,CAAA,EAAG;MACb,OAAO,IAAI,CAACd,cAAc,CAACc,UAAU;IACzC;IACA,IAAIC,KAAKA,CAAA,EAAG;MACR,OAAO,IAAI,CAACf,cAAc,CAACe,KAAK;IACpC;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
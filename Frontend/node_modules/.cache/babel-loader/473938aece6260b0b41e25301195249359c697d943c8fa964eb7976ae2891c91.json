{"ast":null,"code":"export const createCacheTestResult = (ongoingTests, testResults) => {\n  return (tester, test) => {\n    const cachedTestResult = testResults.get(tester);\n    if (cachedTestResult !== undefined) {\n      return cachedTestResult;\n    }\n    const ongoingTest = ongoingTests.get(tester);\n    if (ongoingTest !== undefined) {\n      return ongoingTest;\n    }\n    try {\n      const synchronousTestResult = test();\n      if (synchronousTestResult instanceof Promise) {\n        ongoingTests.set(tester, synchronousTestResult);\n        return synchronousTestResult.catch(() => false).then(finalTestResult => {\n          ongoingTests.delete(tester);\n          testResults.set(tester, finalTestResult);\n          return finalTestResult;\n        });\n      }\n      testResults.set(tester, synchronousTestResult);\n      return synchronousTestResult;\n    } catch {\n      testResults.set(tester, false);\n      return false;\n    }\n  };\n};","map":{"version":3,"names":["createCacheTestResult","ongoingTests","testResults","tester","test","cachedTestResult","get","undefined","ongoingTest","synchronousTestResult","Promise","set","catch","then","finalTestResult","delete"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js"],"sourcesContent":["export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAGA,CAACC,YAAY,EAAEC,WAAW,KAAK;EAChE,OAAO,CAACC,MAAM,EAAEC,IAAI,KAAK;IACrB,MAAMC,gBAAgB,GAAGH,WAAW,CAACI,GAAG,CAACH,MAAM,CAAC;IAChD,IAAIE,gBAAgB,KAAKE,SAAS,EAAE;MAChC,OAAOF,gBAAgB;IAC3B;IACA,MAAMG,WAAW,GAAGP,YAAY,CAACK,GAAG,CAACH,MAAM,CAAC;IAC5C,IAAIK,WAAW,KAAKD,SAAS,EAAE;MAC3B,OAAOC,WAAW;IACtB;IACA,IAAI;MACA,MAAMC,qBAAqB,GAAGL,IAAI,CAAC,CAAC;MACpC,IAAIK,qBAAqB,YAAYC,OAAO,EAAE;QAC1CT,YAAY,CAACU,GAAG,CAACR,MAAM,EAAEM,qBAAqB,CAAC;QAC/C,OAAOA,qBAAqB,CACvBG,KAAK,CAAC,MAAM,KAAK,CAAC,CAClBC,IAAI,CAAEC,eAAe,IAAK;UAC3Bb,YAAY,CAACc,MAAM,CAACZ,MAAM,CAAC;UAC3BD,WAAW,CAACS,GAAG,CAACR,MAAM,EAAEW,eAAe,CAAC;UACxC,OAAOA,eAAe;QAC1B,CAAC,CAAC;MACN;MACAZ,WAAW,CAACS,GAAG,CAACR,MAAM,EAAEM,qBAAqB,CAAC;MAC9C,OAAOA,qBAAqB;IAChC,CAAC,CACD,MAAM;MACFP,WAAW,CAACS,GAAG,CAACR,MAAM,EAAE,KAAK,CAAC;MAC9B,OAAO,KAAK;IAChB;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
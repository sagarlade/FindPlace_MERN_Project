{"ast":null,"code":"export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaElementAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n      // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw TypeError();\n      }\n      super(context, true, nativeMediaElementAudioSourceNode, null);\n      this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n    }\n    get mediaElement() {\n      return this._nativeMediaElementAudioSourceNode.mediaElement;\n    }\n  };\n};","map":{"version":3,"names":["createMediaElementAudioSourceNodeConstructor","audioNodeConstructor","createNativeMediaElementAudioSourceNode","getNativeContext","isNativeOfflineAudioContext","MediaElementAudioSourceNode","constructor","context","options","nativeContext","nativeMediaElementAudioSourceNode","TypeError","_nativeMediaElementAudioSourceNode","mediaElement"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js"],"sourcesContent":["export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map"],"mappings":"AAAA,OAAO,MAAMA,4CAA4C,GAAGA,CAACC,oBAAoB,EAAEC,uCAAuC,EAAEC,gBAAgB,EAAEC,2BAA2B,KAAK;EAC1K,OAAO,MAAMC,2BAA2B,SAASJ,oBAAoB,CAAC;IAClEK,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;MAC1B,MAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAO,CAAC;MAC/C,MAAMG,iCAAiC,GAAGR,uCAAuC,CAACO,aAAa,EAAED,OAAO,CAAC;MACzG;MACA,IAAIJ,2BAA2B,CAACK,aAAa,CAAC,EAAE;QAC5C,MAAME,SAAS,CAAC,CAAC;MACrB;MACA,KAAK,CAACJ,OAAO,EAAE,IAAI,EAAEG,iCAAiC,EAAE,IAAI,CAAC;MAC7D,IAAI,CAACE,kCAAkC,GAAGF,iCAAiC;IAC/E;IACA,IAAIG,YAAYA,CAAA,EAAG;MACf,OAAO,IAAI,CAACD,kCAAkC,CAACC,YAAY;IAC/D;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
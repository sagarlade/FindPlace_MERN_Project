{"ast":null,"code":"import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n  Q: 1,\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  detune: 0,\n  frequency: 350,\n  gain: 0,\n  type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n  return class BiquadFilterNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = {\n        ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const biquadFilterNodeRenderer = isOffline ? createBiquadFilterNodeRenderer() : null;\n      super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n      // Bug #80: Safari does not export the correct values for maxValue and minValue.\n      this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n      this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n      // Bug #77: Firefox & Safari do not export the correct value for minValue.\n      this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n      // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n      this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n      this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n      // @todo Determine a meaningful tail-time instead of just using one second.\n      setAudioNodeTailTime(this, 1);\n    }\n    get detune() {\n      return this._detune;\n    }\n    get frequency() {\n      return this._frequency;\n    }\n    get gain() {\n      return this._gain;\n    }\n    get Q() {\n      return this._Q;\n    }\n    get type() {\n      return this._nativeBiquadFilterNode.type;\n    }\n    set type(value) {\n      this._nativeBiquadFilterNode.type = value;\n    }\n    getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n      // Bug #189: Safari does throw an InvalidStateError.\n      try {\n        this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n      } catch (err) {\n        if (err.code === 11) {\n          throw createInvalidAccessError();\n        }\n        throw err;\n      }\n      // Bug #68: Safari does not throw an error if the parameters differ in their length.\n      if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n        throw createInvalidAccessError();\n      }\n    }\n  };\n};","map":{"version":3,"names":["MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","DEFAULT_OPTIONS","Q","channelCount","channelCountMode","channelInterpretation","detune","frequency","gain","type","createBiquadFilterNodeConstructor","audioNodeConstructor","createAudioParam","createBiquadFilterNodeRenderer","createInvalidAccessError","createNativeBiquadFilterNode","getNativeContext","isNativeOfflineAudioContext","setAudioNodeTailTime","BiquadFilterNode","constructor","context","options","nativeContext","mergedOptions","nativeBiquadFilterNode","isOffline","biquadFilterNodeRenderer","_Q","_detune","Math","log2","_frequency","sampleRate","_gain","log10","_nativeBiquadFilterNode","value","getFrequencyResponse","frequencyHz","magResponse","phaseResponse","err","code","length"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js"],"sourcesContent":["import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            }\n            catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=biquad-filter-node-constructor.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
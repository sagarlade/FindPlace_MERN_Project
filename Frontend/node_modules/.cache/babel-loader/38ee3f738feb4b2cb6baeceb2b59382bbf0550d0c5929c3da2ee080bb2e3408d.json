{"ast":null,"code":"import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = nativeAudioBufferSourceNode => {\n  nativeAudioBufferSourceNode.start = (start => {\n    let isScheduled = false;\n    return (when = 0, offset = 0, duration) => {\n      if (isScheduled) {\n        throw createInvalidStateError();\n      }\n      start.call(nativeAudioBufferSourceNode, when, offset, duration);\n      isScheduled = true;\n    };\n  })(nativeAudioBufferSourceNode.start);\n};","map":{"version":3,"names":["createInvalidStateError","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","nativeAudioBufferSourceNode","start","isScheduled","when","offset","duration","call"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js"],"sourcesContent":["import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,kCAAkC;AAC1E,OAAO,MAAMC,oDAAoD,GAAIC,2BAA2B,IAAK;EACjGA,2BAA2B,CAACC,KAAK,GAAG,CAAEA,KAAK,IAAK;IAC5C,IAAIC,WAAW,GAAG,KAAK;IACvB,OAAO,CAACC,IAAI,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEC,QAAQ,KAAK;MACvC,IAAIH,WAAW,EAAE;QACb,MAAMJ,uBAAuB,CAAC,CAAC;MACnC;MACAG,KAAK,CAACK,IAAI,CAACN,2BAA2B,EAAEG,IAAI,EAAEC,MAAM,EAAEC,QAAQ,CAAC;MAC/DH,WAAW,GAAG,IAAI;IACtB,CAAC;EACL,CAAC,EAAEF,2BAA2B,CAACC,KAAK,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
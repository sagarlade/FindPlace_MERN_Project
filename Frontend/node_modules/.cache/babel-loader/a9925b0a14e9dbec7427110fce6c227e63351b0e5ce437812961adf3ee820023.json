{"ast":null,"code":"export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n  return (nativeAudioContext, {\n    mediaStreamTrack\n  }) => {\n    // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n    if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n      return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n    }\n    const mediaStream = new MediaStream([mediaStreamTrack]);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n    // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n    if (mediaStreamTrack.kind !== 'audio') {\n      throw createInvalidStateError();\n    }\n    // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n    if (isNativeOfflineAudioContext(nativeAudioContext)) {\n      throw new TypeError();\n    }\n    return nativeMediaStreamAudioSourceNode;\n  };\n};","map":{"version":3,"names":["createNativeMediaStreamTrackAudioSourceNodeFactory","createInvalidStateError","isNativeOfflineAudioContext","nativeAudioContext","mediaStreamTrack","createMediaStreamTrackSource","mediaStream","MediaStream","nativeMediaStreamAudioSourceNode","createMediaStreamSource","kind","TypeError"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js"],"sourcesContent":["export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map"],"mappings":"AAAA,OAAO,MAAMA,kDAAkD,GAAGA,CAACC,uBAAuB,EAAEC,2BAA2B,KAAK;EACxH,OAAO,CAACC,kBAAkB,EAAE;IAAEC;EAAiB,CAAC,KAAK;IACjD;IACA,IAAI,OAAOD,kBAAkB,CAACE,4BAA4B,KAAK,UAAU,EAAE;MACvE,OAAOF,kBAAkB,CAACE,4BAA4B,CAACD,gBAAgB,CAAC;IAC5E;IACA,MAAME,WAAW,GAAG,IAAIC,WAAW,CAAC,CAACH,gBAAgB,CAAC,CAAC;IACvD,MAAMI,gCAAgC,GAAGL,kBAAkB,CAACM,uBAAuB,CAACH,WAAW,CAAC;IAChG;IACA,IAAIF,gBAAgB,CAACM,IAAI,KAAK,OAAO,EAAE;MACnC,MAAMT,uBAAuB,CAAC,CAAC;IACnC;IACA;IACA,IAAIC,2BAA2B,CAACC,kBAAkB,CAAC,EAAE;MACjD,MAAM,IAAIQ,SAAS,CAAC,CAAC;IACzB;IACA,OAAOH,gCAAgC;EAC3C,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
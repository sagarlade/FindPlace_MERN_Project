{"ast":null,"code":"export const createIsSupportedPromise = window => {\n  if (window !== null && window.MediaStream !== undefined && (\n  /*\n   * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.\n   */\n  window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)) {\n    /*\n     * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n     * audio codec.\n     */\n    return new Promise(resolve => {\n      // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.\n      if (window.MediaRecorder === undefined) {\n        return resolve(true);\n      }\n      // @todo captureStream() is not defined yet.\n      const canvasElement = document.createElement('canvas');\n      // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n      canvasElement.getContext('2d');\n      if (typeof canvasElement.captureStream !== 'function') {\n        return resolve(false);\n      }\n      const mediaStream = canvasElement.captureStream();\n      const mimeType = 'audio/webm';\n      try {\n        const mediaRecorder = new window.MediaRecorder(mediaStream, {\n          mimeType\n        });\n        mediaRecorder.addEventListener('dataavailable', ({\n          data\n        }) => resolve(data.type === mimeType));\n        mediaRecorder.start();\n        setTimeout(() => mediaRecorder.stop(), 10);\n      } catch (err) {\n        resolve(err.name === 'NotSupportedError');\n      }\n    });\n  }\n  return Promise.resolve(false);\n};","map":{"version":3,"names":["createIsSupportedPromise","window","MediaStream","undefined","MediaRecorder","isTypeSupported","Promise","resolve","canvasElement","document","createElement","getContext","captureStream","mediaStream","mimeType","mediaRecorder","addEventListener","data","type","start","setTimeout","stop","err","name"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/extendable-media-recorder/build/es2019/factories/is-supported-promise.js"],"sourcesContent":["export const createIsSupportedPromise = (window) => {\n    if (window !== null &&\n        window.MediaStream !== undefined &&\n        /*\n         * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.\n         */\n        (window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)) {\n        /*\n         * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n         * audio codec.\n         */\n        return new Promise((resolve) => {\n            // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.\n            if (window.MediaRecorder === undefined) {\n                return resolve(true);\n            }\n            // @todo captureStream() is not defined yet.\n            const canvasElement = document.createElement('canvas');\n            // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n            canvasElement.getContext('2d');\n            if (typeof canvasElement.captureStream !== 'function') {\n                return resolve(false);\n            }\n            const mediaStream = canvasElement.captureStream();\n            const mimeType = 'audio/webm';\n            try {\n                const mediaRecorder = new window.MediaRecorder(mediaStream, { mimeType });\n                mediaRecorder.addEventListener('dataavailable', ({ data }) => resolve(data.type === mimeType));\n                mediaRecorder.start();\n                setTimeout(() => mediaRecorder.stop(), 10);\n            }\n            catch (err) {\n                resolve(err.name === 'NotSupportedError');\n            }\n        });\n    }\n    return Promise.resolve(false);\n};\n//# sourceMappingURL=is-supported-promise.js.map"],"mappings":"AAAA,OAAO,MAAMA,wBAAwB,GAAIC,MAAM,IAAK;EAChD,IAAIA,MAAM,KAAK,IAAI,IACfA,MAAM,CAACC,WAAW,KAAKC,SAAS;EAChC;AACR;AACA;EACSF,MAAM,CAACG,aAAa,KAAKD,SAAS,IAAIF,MAAM,CAACG,aAAa,CAACC,eAAe,KAAKF,SAAS,CAAC,EAAE;IAC5F;AACR;AACA;AACA;IACQ,OAAO,IAAIG,OAAO,CAAEC,OAAO,IAAK;MAC5B;MACA,IAAIN,MAAM,CAACG,aAAa,KAAKD,SAAS,EAAE;QACpC,OAAOI,OAAO,CAAC,IAAI,CAAC;MACxB;MACA;MACA,MAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MACtD;MACAF,aAAa,CAACG,UAAU,CAAC,IAAI,CAAC;MAC9B,IAAI,OAAOH,aAAa,CAACI,aAAa,KAAK,UAAU,EAAE;QACnD,OAAOL,OAAO,CAAC,KAAK,CAAC;MACzB;MACA,MAAMM,WAAW,GAAGL,aAAa,CAACI,aAAa,CAAC,CAAC;MACjD,MAAME,QAAQ,GAAG,YAAY;MAC7B,IAAI;QACA,MAAMC,aAAa,GAAG,IAAId,MAAM,CAACG,aAAa,CAACS,WAAW,EAAE;UAAEC;QAAS,CAAC,CAAC;QACzEC,aAAa,CAACC,gBAAgB,CAAC,eAAe,EAAE,CAAC;UAAEC;QAAK,CAAC,KAAKV,OAAO,CAACU,IAAI,CAACC,IAAI,KAAKJ,QAAQ,CAAC,CAAC;QAC9FC,aAAa,CAACI,KAAK,CAAC,CAAC;QACrBC,UAAU,CAAC,MAAML,aAAa,CAACM,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;MAC9C,CAAC,CACD,OAAOC,GAAG,EAAE;QACRf,OAAO,CAACe,GAAG,CAACC,IAAI,KAAK,mBAAmB,CAAC;MAC7C;IACJ,CAAC,CAAC;EACN;EACA,OAAOjB,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;AACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
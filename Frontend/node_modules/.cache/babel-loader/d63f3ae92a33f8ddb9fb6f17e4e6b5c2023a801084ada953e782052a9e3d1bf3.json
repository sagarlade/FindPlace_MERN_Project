{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n  return (nativeContext, options) => {\n    // Bug #62: Safari does not support ConstantSourceNodes.\n    if (nativeContext.createConstantSource === undefined) {\n      return createNativeConstantSourceNodeFaker(nativeContext, options);\n    }\n    const nativeConstantSourceNode = nativeContext.createConstantSource();\n    assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n    // Bug #44: Safari does not throw a RangeError yet.\n    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n    }\n    // Bug #44: Only Firefox does not throw a RangeError yet.\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n    }\n    // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n    addSilentConnection(nativeContext, nativeConstantSourceNode);\n    return nativeConstantSourceNode;\n  };\n};","map":{"version":3,"names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOptions","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","createNativeConstantSourceNodeFactory","addSilentConnection","cacheTestResult","createNativeConstantSourceNodeFaker","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","nativeContext","options","createConstantSource","undefined","nativeConstantSourceNode"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js"],"sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map"],"mappings":"AAAA,SAASA,oCAAoC,QAAQ,uDAAuD;AAC5G,SAASC,4BAA4B,QAAQ,6CAA6C;AAC1F,SAASC,yDAAyD,QAAQ,8EAA8E;AACxJ,SAASC,wDAAwD,QAAQ,6EAA6E;AACtJ,OAAO,MAAMC,qCAAqC,GAAGA,CAACC,mBAAmB,EAAEC,eAAe,EAAEC,mCAAmC,EAAEC,gEAAgE,EAAEC,+DAA+D,KAAK;EACnQ,OAAO,CAACC,aAAa,EAAEC,OAAO,KAAK;IAC/B;IACA,IAAID,aAAa,CAACE,oBAAoB,KAAKC,SAAS,EAAE;MAClD,OAAON,mCAAmC,CAACG,aAAa,EAAEC,OAAO,CAAC;IACtE;IACA,MAAMG,wBAAwB,GAAGJ,aAAa,CAACE,oBAAoB,CAAC,CAAC;IACrEX,4BAA4B,CAACa,wBAAwB,EAAEH,OAAO,CAAC;IAC/DX,oCAAoC,CAACc,wBAAwB,EAAEH,OAAO,EAAE,QAAQ,CAAC;IACjF;IACA,IAAI,CAACL,eAAe,CAACE,gEAAgE,EAAE,MAAMA,gEAAgE,CAACE,aAAa,CAAC,CAAC,EAAE;MAC3KR,yDAAyD,CAACY,wBAAwB,CAAC;IACvF;IACA;IACA,IAAI,CAACR,eAAe,CAACG,+DAA+D,EAAE,MAAMA,+DAA+D,CAACC,aAAa,CAAC,CAAC,EAAE;MACzKP,wDAAwD,CAACW,wBAAwB,CAAC;IACtF;IACA;IACAT,mBAAmB,CAACK,aAAa,EAAEI,wBAAwB,CAAC;IAC5D,OAAOA,wBAAwB;EACnC,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createBroker } from 'broker-factory';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const wrap = createBroker({\n  characterize: ({\n    call\n  }) => {\n    return () => call('characterize');\n  },\n  encode: ({\n    call\n  }) => {\n    return (recordingId, timeslice) => {\n      return call('encode', {\n        recordingId,\n        timeslice\n      });\n    };\n  },\n  record: ({\n    call\n  }) => {\n    return async (recordingId, sampleRate, typedArrays) => {\n      await call('record', {\n        recordingId,\n        sampleRate,\n        typedArrays\n      }, typedArrays.map(({\n        buffer\n      }) => buffer));\n    };\n  }\n});\nexport const load = url => {\n  const worker = new Worker(url);\n  return wrap(worker);\n};","map":{"version":3,"names":["createBroker","wrap","characterize","call","encode","recordingId","timeslice","record","sampleRate","typedArrays","map","buffer","load","url","worker","Worker"],"sources":["../../src/module.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAK7C;;;;AAIA,cAAc,oBAAoB;AAClC,cAAc,eAAe;AAE7B,OAAO,MAAMC,IAAI,GAAoDD,YAAY,CAG/E;EACEE,YAAY,EAAEA,CAAC;IAAEC;EAAI,CAAE,KAAI;IACvB,OAAO,MAAMA,IAAI,CAAC,cAAc,CAAC;EACrC,CAAC;EACDC,MAAM,EAAEA,CAAC;IAAED;EAAI,CAAE,KAAI;IACjB,OAAO,CAACE,WAAW,EAAEC,SAAS,KAAI;MAC9B,OAAOH,IAAI,CAAC,QAAQ,EAAE;QAAEE,WAAW;QAAEC;MAAS,CAAE,CAAC;IACrD,CAAC;EACL,CAAC;EACDC,MAAM,EAAEA,CAAC;IAAEJ;EAAI,CAAE,KAAI;IACjB,OAAO,OAAOE,WAAW,EAAEG,UAAU,EAAEC,WAAW,KAAI;MAClD,MAAMN,IAAI,CACN,QAAQ,EACR;QAAEE,WAAW;QAAEG,UAAU;QAAEC;MAAW,CAAE,EACxCA,WAAW,CAACC,GAAG,CAAC,CAAC;QAAEC;MAAM,CAAE,KAAKA,MAAM,CAAC,CAC1C;IACL,CAAC;EACL;CACH,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAoDC,GAAW,IAAI;EAChF,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACF,GAAG,CAAC;EAE9B,OAAOZ,IAAI,CAACa,MAAM,CAAC;AACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
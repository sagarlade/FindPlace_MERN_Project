{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santosh Lade\\\\Desktop\\\\MERN App\\\\client\\\\src\\\\components\\\\ScreenRecording\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Row, Col, Button, Badge } from \"antd\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport Text from \"antd/lib/typography/Text\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScreenRecording = ({\n  screen,\n  audio,\n  video,\n  downloadRecordingPath,\n  downloadRecordingType\n}) => {\n  _s();\n  const [recordingNumber, setRecordingNumber] = useState(0);\n  const [status, setStatus] = useState(\"\");\n  const [mediaBlobUrl, setMediaBlobUrl] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const {\n    startRecording,\n    stopRecording,\n    mediaBlobUrl: recordedMediaBlobUrl\n  } = useReactMediaRecorder({\n    screen,\n    audio,\n    video\n  });\n  const handleStartRecording = () => {\n    startRecording();\n    setStatus(\"recording\");\n  };\n  const handleStopRecording = async () => {\n    try {\n      const currentTimeStamp = new Date().getTime();\n      setRecordingNumber(currentTimeStamp);\n      await stopRecording();\n      setStatus(\"stopped\");\n      setMediaBlobUrl(recordedMediaBlobUrl);\n      const recordingData = {\n        url: recordedMediaBlobUrl,\n        timestamp: currentTimeStamp\n      };\n      const url = \"http://localhost:8080/api/recording\"; // Replace with your backend URL\n      await axios.post(url, recordingData);\n      console.log(\"Recording saved successfully\");\n    } catch (error) {\n      setError(\"An error occurred while stopping recording.\");\n      console.error(error);\n    }\n  };\n  const handleViewRecording = () => {\n    window.open(mediaBlobUrl, \"_blank\").focus();\n  };\n  const handleDownloadRecording = () => {\n    const pathName = `${downloadRecordingPath}_${recordingNumber}.${downloadRecordingType}`;\n    try {\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n        window.navigator.msSaveOrOpenBlob(mediaBlobUrl, pathName);\n      } else {\n        const link = document.createElement(\"a\");\n        link.href = mediaBlobUrl;\n        link.download = pathName;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Screen-Record-Wrapper\",\n    style: {\n      padding: \"5px 20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 10,\n        style: {\n          lineHeight: \"24px\"\n        },\n        children: [status && status !== \"stopped\" && /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Screen Recording Status: \", status && status.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), status && status === \"recording\" && /*#__PURE__*/_jsxDEV(Badge, {\n          className: \"screen-recording-badge\",\n          color: \"#faad14\",\n          status: \"processing\",\n          offset: [2, 0],\n          style: {\n            marginLeft: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 10,\n        style: {\n          textAlign: \"right\"\n        },\n        children: [status && status !== \"recording\" && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: handleStartRecording,\n          type: \"primary\",\n          icon: \"play-circle\",\n          className: \"margin-left-sm\",\n          ghost: true,\n          children: mediaBlobUrl ? \"Record again\" : \"Record your Problem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), status && status === \"recording\" && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: handleStopRecording,\n          type: \"danger\",\n          icon: \"stop\",\n          className: \"margin-left-sm\",\n          ghost: true,\n          children: \"Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), mediaBlobUrl && status && status === \"stopped\" && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: handleViewRecording,\n          type: \"primary\",\n          icon: \"picture\",\n          className: \"viewRecording margin-left-sm\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), downloadRecordingType && mediaBlobUrl && status && status === \"stopped\" && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: handleDownloadRecording,\n          type: \"primary\",\n          icon: \"download\",\n          className: \"downloadRecording margin-left-sm\",\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ScreenRecording, \"P9x6TfB+/fOIoapDk1kILoc4994=\", false, function () {\n  return [useReactMediaRecorder];\n});\n_c = ScreenRecording;\nexport default ScreenRecording;\nvar _c;\n$RefreshReg$(_c, \"ScreenRecording\");","map":{"version":3,"names":["React","useState","Row","Col","Button","Badge","useReactMediaRecorder","Text","axios","jsxDEV","_jsxDEV","ScreenRecording","screen","audio","video","downloadRecordingPath","downloadRecordingType","_s","recordingNumber","setRecordingNumber","status","setStatus","mediaBlobUrl","setMediaBlobUrl","error","setError","startRecording","stopRecording","recordedMediaBlobUrl","handleStartRecording","handleStopRecording","currentTimeStamp","Date","getTime","recordingData","url","timestamp","post","console","log","handleViewRecording","window","open","focus","handleDownloadRecording","pathName","navigator","msSaveOrOpenBlob","link","document","createElement","href","download","body","appendChild","click","removeChild","err","className","style","padding","children","span","lineHeight","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","color","offset","marginLeft","textAlign","size","onClick","type","icon","ghost","_c","$RefreshReg$"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/src/components/ScreenRecording/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Badge } from \"antd\";\r\nimport { useReactMediaRecorder } from \"react-media-recorder\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\"\r\nconst ScreenRecording = ({\r\n  screen,\r\n  audio,\r\n  video,\r\n  downloadRecordingPath,\r\n  downloadRecordingType,\r\n}) => {\r\n  const [recordingNumber, setRecordingNumber] = useState(0);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [mediaBlobUrl, setMediaBlobUrl] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const {\r\n    startRecording,\r\n    stopRecording,\r\n    mediaBlobUrl: recordedMediaBlobUrl,\r\n  } = useReactMediaRecorder({ screen, audio, video });\r\n\r\n  const handleStartRecording = () => {\r\n    startRecording();\r\n    setStatus(\"recording\");\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    try {\r\n      const currentTimeStamp = new Date().getTime();\r\n      setRecordingNumber(currentTimeStamp);\r\n\r\n      await stopRecording();\r\n      setStatus(\"stopped\");\r\n      setMediaBlobUrl(recordedMediaBlobUrl);\r\n\r\n      const recordingData = {\r\n        url: recordedMediaBlobUrl,\r\n        timestamp: currentTimeStamp,\r\n      };\r\n      const url = \"http://localhost:8080/api/recording\"; // Replace with your backend URL\r\n      await axios.post(url, recordingData);\r\n      console.log(\"Recording saved successfully\");\r\n    } catch (error) {\r\n      setError(\"An error occurred while stopping recording.\");\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleViewRecording = () => {\r\n    window.open(mediaBlobUrl, \"_blank\").focus();\r\n  };\r\n\r\n  const handleDownloadRecording = () => {\r\n    const pathName = `${downloadRecordingPath}_${recordingNumber}.${downloadRecordingType}`;\r\n    try {\r\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        window.navigator.msSaveOrOpenBlob(mediaBlobUrl, pathName);\r\n      } else {\r\n        const link = document.createElement(\"a\");\r\n        link.href = mediaBlobUrl;\r\n        link.download = pathName;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Screen-Record-Wrapper\" style={{ padding: \"5px 20px\" }}>\r\n      <Row>\r\n        <Col span={10} style={{ lineHeight: \"24px\" }}>\r\n          {status && status !== \"stopped\" && (\r\n            <Text>\r\n              Screen Recording Status: {status && status.toUpperCase()}\r\n            </Text>\r\n          )}\r\n          {status && status === \"recording\" && (\r\n            <Badge\r\n              className=\"screen-recording-badge\"\r\n              color=\"#faad14\"\r\n              status=\"processing\"\r\n              offset={[2, 0]}\r\n              style={{\r\n                marginLeft: \"5px\",\r\n              }}\r\n            />\r\n          )}\r\n        </Col>\r\n        <Col span={10} style={{ textAlign: \"right\" }}>\r\n          {status && status !== \"recording\" && (\r\n            <Button\r\n              size=\"small\"\r\n              onClick={handleStartRecording}\r\n              type=\"primary\"\r\n              icon=\"play-circle\"\r\n              className=\"margin-left-sm\"\r\n              ghost\r\n            >\r\n              {mediaBlobUrl ? \"Record again\" : \"Record your Problem\"}\r\n            </Button>\r\n          )}\r\n          {status && status === \"recording\" && (\r\n            <Button\r\n              size=\"small\"\r\n              onClick={handleStopRecording}\r\n              type=\"danger\"\r\n              icon=\"stop\"\r\n              className=\"margin-left-sm\"\r\n              ghost\r\n            >\r\n              Stop Recording\r\n            </Button>\r\n          )}\r\n          {mediaBlobUrl && status && status === \"stopped\" && (\r\n            <Button\r\n              size=\"small\"\r\n              onClick={handleViewRecording}\r\n              type=\"primary\"\r\n              icon=\"picture\"\r\n              className=\"viewRecording margin-left-sm\"\r\n            >\r\n              View\r\n            </Button>\r\n          )}\r\n          {downloadRecordingType &&\r\n            mediaBlobUrl &&\r\n            status &&\r\n            status === \"stopped\" && (\r\n              <Button\r\n                size=\"small\"\r\n                onClick={handleDownloadRecording}\r\n                type=\"primary\"\r\n                icon=\"download\"\r\n                className=\"downloadRecording margin-left-sm\"\r\n              >\r\n                Download\r\n              </Button>\r\n            )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScreenRecording;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
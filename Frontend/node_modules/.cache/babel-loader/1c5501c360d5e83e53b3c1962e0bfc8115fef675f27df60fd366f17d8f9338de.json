{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santosh Lade\\\\Desktop\\\\MERN App\\\\client\\\\src\\\\components\\\\ScreenRecording\\\\ScreenRecording.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScreenRecordingApp() {\n  _s();\n  const [currentSessionId, setCurrentSessionId] = useState(null);\n  const [startButtonDisabled, setStartButtonDisabled] = useState(false);\n  const [stopButtonDisabled, setStopButtonDisabled] = useState(true);\n  const [restartButtonDisabled, setRestartButtonDisabled] = useState(true);\n  const [showConfirmation, setShowConfirmation] = useState(false); // State for confirmation dialog\n\n  const handleStartRecording = () => {\n    setShowConfirmation(true);\n  };\n  const handleConfirmStartRecording = async () => {\n    try {\n      setShowConfirmation(false);\n      const response = await axios.post(\"/start-recording\");\n      const data = response.data;\n      setCurrentSessionId(data.sessionId);\n      setStartButtonDisabled(true);\n      setStopButtonDisabled(false);\n      setRestartButtonDisabled(true);\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n    }\n  };\n  const handleCancelRecording = () => {\n    setShowConfirmation(false);\n  };\n  const handleStopRecording = async () => {\n    try {\n      await axios.post(`/stop-recording/${currentSessionId}`);\n      setCurrentSessionId(null);\n      setStartButtonDisabled(false);\n      setStopButtonDisabled(true);\n      setRestartButtonDisabled(false);\n    } catch (error) {\n      console.error(\"Error stopping recording:\", error);\n    }\n  };\n  const handleRestartRecording = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: startButtonDisabled,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: stopButtonDisabled,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestartRecording,\n      disabled: restartButtonDisabled,\n      children: \"Restart Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.confirmationDialog,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Do you want to record the entire window and webcam?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmStartRecording,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelRecording,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ScreenRecordingApp, \"rxMQL70lV1/hmXInsoVZBIwK0bY=\");\n_c = ScreenRecordingApp;\nexport default ScreenRecordingApp;\nvar _c;\n$RefreshReg$(_c, \"ScreenRecordingApp\");","map":{"version":3,"names":["React","useState","axios","styles","jsxDEV","_jsxDEV","ScreenRecordingApp","_s","currentSessionId","setCurrentSessionId","startButtonDisabled","setStartButtonDisabled","stopButtonDisabled","setStopButtonDisabled","restartButtonDisabled","setRestartButtonDisabled","showConfirmation","setShowConfirmation","handleStartRecording","handleConfirmStartRecording","response","post","data","sessionId","error","console","handleCancelRecording","handleStopRecording","handleRestartRecording","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","className","confirmationDialog","_c","$RefreshReg$"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/src/components/ScreenRecording/ScreenRecording.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction ScreenRecordingApp() {\r\n  const [currentSessionId, setCurrentSessionId] = useState(null);\r\n  const [startButtonDisabled, setStartButtonDisabled] = useState(false);\r\n  const [stopButtonDisabled, setStopButtonDisabled] = useState(true);\r\n  const [restartButtonDisabled, setRestartButtonDisabled] = useState(true);\r\n  const [showConfirmation, setShowConfirmation] = useState(false); // State for confirmation dialog\r\n\r\n  const handleStartRecording = () => {\r\n    setShowConfirmation(true); \r\n  };\r\n\r\n  const handleConfirmStartRecording = async () => {\r\n    try {\r\n      setShowConfirmation(false);\r\n      const response = await axios.post(\"/start-recording\");\r\n      const data = response.data;\r\n      setCurrentSessionId(data.sessionId);\r\n      setStartButtonDisabled(true);\r\n      setStopButtonDisabled(false);\r\n      setRestartButtonDisabled(true);\r\n    } catch (error) {\r\n      console.error(\"Error starting recording:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCancelRecording = () => {\r\n    setShowConfirmation(false);\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    try {\r\n      await axios.post(`/stop-recording/${currentSessionId}`);\r\n      setCurrentSessionId(null);\r\n      setStartButtonDisabled(false);\r\n      setStopButtonDisabled(true);\r\n      setRestartButtonDisabled(false);\r\n    } catch (error) {\r\n      console.error(\"Error stopping recording:\", error);\r\n    }\r\n  };\r\n\r\n  \r\n  const handleRestartRecording = () => {\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleStartRecording} disabled={startButtonDisabled}>\r\n        Start Recording\r\n      </button>\r\n      <button onClick={handleStopRecording} disabled={stopButtonDisabled}>\r\n        Stop Recording\r\n      </button>\r\n      <button onClick={handleRestartRecording} disabled={restartButtonDisabled}>\r\n        Restart Recording\r\n      </button>\r\n      {showConfirmation && (\r\n        <div className={styles.confirmationDialog}>\r\n          <p>Do you want to record the entire window and webcam?</p>\r\n          <button onClick={handleConfirmStartRecording}>Yes</button>\r\n          <button onClick={handleCancelRecording}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenRecordingApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
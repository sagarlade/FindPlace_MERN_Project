{"ast":null,"code":"const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  /*\n   * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n   * behavior.\n   */\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class StereoPannerNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = {\n        ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;\n      super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n      this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n    }\n    get pan() {\n      return this._pan;\n    }\n  };\n};","map":{"version":3,"names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","pan","createStereoPannerNodeConstructor","audioNodeConstructor","createAudioParam","createNativeStereoPannerNode","createStereoPannerNodeRenderer","getNativeContext","isNativeOfflineAudioContext","StereoPannerNode","constructor","context","options","nativeContext","mergedOptions","nativeStereoPannerNode","isOffline","stereoPannerNodeRenderer","_pan"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js"],"sourcesContent":["const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map"],"mappings":"AAAA,MAAMA,eAAe,GAAG;EACpBC,YAAY,EAAE,CAAC;EACf;AACJ;AACA;AACA;EACIC,gBAAgB,EAAE,UAAU;EAC5BC,qBAAqB,EAAE,UAAU;EACjCC,GAAG,EAAE;AACT,CAAC;AACD,OAAO,MAAMC,iCAAiC,GAAGA,CAACC,oBAAoB,EAAEC,gBAAgB,EAAEC,4BAA4B,EAAEC,8BAA8B,EAAEC,gBAAgB,EAAEC,2BAA2B,KAAK;EACtM,OAAO,MAAMC,gBAAgB,SAASN,oBAAoB,CAAC;IACvDO,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;MAC1B,MAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAO,CAAC;MAC/C,MAAMG,aAAa,GAAG;QAAE,GAAGjB,eAAe;QAAE,GAAGe;MAAQ,CAAC;MACxD,MAAMG,sBAAsB,GAAGV,4BAA4B,CAACQ,aAAa,EAAEC,aAAa,CAAC;MACzF,MAAME,SAAS,GAAGR,2BAA2B,CAACK,aAAa,CAAC;MAC5D,MAAMI,wBAAwB,GAAID,SAAS,GAAGV,8BAA8B,CAAC,CAAC,GAAG,IAAK;MACtF,KAAK,CAACK,OAAO,EAAE,KAAK,EAAEI,sBAAsB,EAAEE,wBAAwB,CAAC;MACvE,IAAI,CAACC,IAAI,GAAGd,gBAAgB,CAAC,IAAI,EAAEY,SAAS,EAAED,sBAAsB,CAACd,GAAG,CAAC;IAC7E;IACA,IAAIA,GAAGA,CAAA,EAAG;MACN,OAAO,IAAI,CAACiB,IAAI;IACpB;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  detune: 0,\n  frequency: 440,\n  periodicWave: undefined,\n  type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n  return class OscillatorNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = {\n        ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const oscillatorNodeRenderer = isOffline ? createOscillatorNodeRenderer() : null;\n      const nyquist = context.sampleRate / 2;\n      super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n      // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n      this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n      // Bug #76: Safari does not export the correct values for maxValue and minValue.\n      this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n      this._nativeOscillatorNode = nativeOscillatorNode;\n      this._onended = null;\n      this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n      if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n        this._oscillatorNodeRenderer.periodicWave = mergedOptions.periodicWave;\n      }\n    }\n    get detune() {\n      return this._detune;\n    }\n    get frequency() {\n      return this._frequency;\n    }\n    get onended() {\n      return this._onended;\n    }\n    set onended(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeOscillatorNode.onended = wrappedListener;\n      const nativeOnEnded = this._nativeOscillatorNode.onended;\n      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n    }\n    get type() {\n      return this._nativeOscillatorNode.type;\n    }\n    set type(value) {\n      this._nativeOscillatorNode.type = value;\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.periodicWave = null;\n      }\n    }\n    setPeriodicWave(periodicWave) {\n      this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.periodicWave = periodicWave;\n      }\n    }\n    start(when = 0) {\n      this._nativeOscillatorNode.start(when);\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.start = when;\n      }\n      if (this.context.state !== 'closed') {\n        setInternalStateToActive(this);\n        const resetInternalStateToPassive = () => {\n          this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n          if (isActiveAudioNode(this)) {\n            setInternalStateToPassive(this);\n          }\n        };\n        this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n      }\n    }\n    stop(when = 0) {\n      this._nativeOscillatorNode.stop(when);\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.stop = when;\n      }\n    }\n  };\n};","map":{"version":3,"names":["isActiveAudioNode","setInternalStateToActive","setInternalStateToPassive","DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","detune","frequency","periodicWave","undefined","type","createOscillatorNodeConstructor","audioNodeConstructor","createAudioParam","createNativeOscillatorNode","createOscillatorNodeRenderer","getNativeContext","isNativeOfflineAudioContext","wrapEventListener","OscillatorNode","constructor","context","options","nativeContext","mergedOptions","nativeOscillatorNode","isOffline","oscillatorNodeRenderer","nyquist","sampleRate","_detune","_frequency","_nativeOscillatorNode","_onended","_oscillatorNodeRenderer","onended","value","wrappedListener","nativeOnEnded","setPeriodicWave","start","when","state","resetInternalStateToPassive","removeEventListener","addEventListener","stop"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js"],"sourcesContent":["import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=oscillator-node-constructor.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n  return (nativeContext, channelMergerNode) => {\n    // Bug #15: Safari does not return the default properties.\n    channelMergerNode.channelCount = 1;\n    channelMergerNode.channelCountMode = 'explicit';\n    // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n    Object.defineProperty(channelMergerNode, 'channelCount', {\n      get: () => 1,\n      set: () => {\n        throw createInvalidStateError();\n      }\n    });\n    Object.defineProperty(channelMergerNode, 'channelCountMode', {\n      get: () => 'explicit',\n      set: () => {\n        throw createInvalidStateError();\n      }\n    });\n    // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n    const audioBufferSourceNode = nativeContext.createBufferSource();\n    const whenConnected = () => {\n      const length = channelMergerNode.numberOfInputs;\n      for (let i = 0; i < length; i += 1) {\n        audioBufferSourceNode.connect(channelMergerNode, 0, i);\n      }\n    };\n    const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n    monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n  };\n};","map":{"version":3,"names":["createWrapChannelMergerNode","createInvalidStateError","monitorConnections","nativeContext","channelMergerNode","channelCount","channelCountMode","Object","defineProperty","get","set","audioBufferSourceNode","createBufferSource","whenConnected","length","numberOfInputs","i","connect","whenDisconnected","disconnect"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js"],"sourcesContent":["export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map"],"mappings":"AAAA,OAAO,MAAMA,2BAA2B,GAAGA,CAACC,uBAAuB,EAAEC,kBAAkB,KAAK;EACxF,OAAO,CAACC,aAAa,EAAEC,iBAAiB,KAAK;IACzC;IACAA,iBAAiB,CAACC,YAAY,GAAG,CAAC;IAClCD,iBAAiB,CAACE,gBAAgB,GAAG,UAAU;IAC/C;IACAC,MAAM,CAACC,cAAc,CAACJ,iBAAiB,EAAE,cAAc,EAAE;MACrDK,GAAG,EAAEA,CAAA,KAAM,CAAC;MACZC,GAAG,EAAEA,CAAA,KAAM;QACP,MAAMT,uBAAuB,CAAC,CAAC;MACnC;IACJ,CAAC,CAAC;IACFM,MAAM,CAACC,cAAc,CAACJ,iBAAiB,EAAE,kBAAkB,EAAE;MACzDK,GAAG,EAAEA,CAAA,KAAM,UAAU;MACrBC,GAAG,EAAEA,CAAA,KAAM;QACP,MAAMT,uBAAuB,CAAC,CAAC;MACnC;IACJ,CAAC,CAAC;IACF;IACA,MAAMU,qBAAqB,GAAGR,aAAa,CAACS,kBAAkB,CAAC,CAAC;IAChE,MAAMC,aAAa,GAAGA,CAAA,KAAM;MACxB,MAAMC,MAAM,GAAGV,iBAAiB,CAACW,cAAc;MAC/C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,EAAEE,CAAC,IAAI,CAAC,EAAE;QAChCL,qBAAqB,CAACM,OAAO,CAACb,iBAAiB,EAAE,CAAC,EAAEY,CAAC,CAAC;MAC1D;IACJ,CAAC;IACD,MAAME,gBAAgB,GAAGA,CAAA,KAAMP,qBAAqB,CAACQ,UAAU,CAACf,iBAAiB,CAAC;IAClFF,kBAAkB,CAACE,iBAAiB,EAAES,aAAa,EAAEK,gBAAgB,CAAC;EAC1E,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst ONGOING_REQUESTS = new WeakMap();\nconst createOrGetOngoingRequests = sender => {\n  if (ONGOING_REQUESTS.has(sender)) {\n    // @todo TypeScript needs to be convinced that has() works as expected.\n    return ONGOING_REQUESTS.get(sender);\n  }\n  const ongoingRequests = new Map();\n  ONGOING_REQUESTS.set(sender, ongoingRequests);\n  return ongoingRequests;\n};\nexport const createBroker = brokerImplementation => {\n  const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n  return sender => {\n    const ongoingRequests = createOrGetOngoingRequests(sender);\n    sender.addEventListener('message', ({\n      data: message\n    }) => {\n      const {\n        id\n      } = message;\n      if (id !== null && ongoingRequests.has(id)) {\n        const {\n          reject,\n          resolve\n        } = ongoingRequests.get(id);\n        ongoingRequests.delete(id);\n        if (message.error === undefined) {\n          resolve(message.result);\n        } else {\n          reject(new Error(message.error.message));\n        }\n      }\n    });\n    if (isMessagePort(sender)) {\n      sender.start();\n    }\n    const call = (method, params = null, transferables = []) => {\n      return new Promise((resolve, reject) => {\n        const id = generateUniqueNumber(ongoingRequests);\n        ongoingRequests.set(id, {\n          reject,\n          resolve\n        });\n        if (params === null) {\n          sender.postMessage({\n            id,\n            method\n          }, transferables);\n        } else {\n          sender.postMessage({\n            id,\n            method,\n            params\n          }, transferables);\n        }\n      });\n    };\n    const notify = (method, params, transferables = []) => {\n      sender.postMessage({\n        id: null,\n        method,\n        params\n      }, transferables);\n    };\n    let functions = {};\n    for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n      functions = {\n        ...functions,\n        [key]: handler({\n          call,\n          notify\n        })\n      };\n    }\n    return {\n      ...functions\n    };\n  };\n};","map":{"version":3,"names":["generateUniqueNumber","isMessagePort","extendBrokerImplementation","ONGOING_REQUESTS","WeakMap","createOrGetOngoingRequests","sender","has","get","ongoingRequests","Map","set","createBroker","brokerImplementation","fullBrokerImplementation","addEventListener","data","message","id","reject","resolve","delete","error","undefined","result","Error","start","call","method","params","transferables","Promise","postMessage","notify","functions","key","handler","Object","entries"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/broker-factory/build/es2019/module.js"],"sourcesContent":["import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst ONGOING_REQUESTS = new WeakMap();\nconst createOrGetOngoingRequests = (sender) => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return ONGOING_REQUESTS.get(sender);\n    }\n    const ongoingRequests = new Map();\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n    return ongoingRequests;\n};\nexport const createBroker = (brokerImplementation) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n    return (sender) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n        sender.addEventListener('message', (({ data: message }) => {\n            const { id } = message;\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = ongoingRequests.get(id);\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }));\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n        const call = (method, params = null, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                if (params === null) {\n                    sender.postMessage({ id, method }, transferables);\n                }\n                else {\n                    sender.postMessage({ id, method, params }, transferables);\n                }\n            });\n        };\n        const notify = (method, params, transferables = []) => {\n            sender.postMessage({ id: null, method, params }, transferables);\n        };\n        let functions = {};\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = { ...functions, [key]: handler({ call, notify }) };\n        }\n        return { ...functions };\n    };\n};\n//# sourceMappingURL=module.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
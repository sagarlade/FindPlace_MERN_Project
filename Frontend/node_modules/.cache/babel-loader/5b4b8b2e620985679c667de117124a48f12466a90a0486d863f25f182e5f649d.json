{"ast":null,"code":"import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n  return (audioNode, count) => {\n    const cycleCounter = cycleCounters.get(audioNode);\n    if (cycleCounter === undefined) {\n      throw new Error('Missing the expected cycle count.');\n    }\n    const nativeContext = getNativeContext(audioNode.context);\n    const isOffline = isNativeOfflineAudioContext(nativeContext);\n    if (cycleCounter === count) {\n      cycleCounters.delete(audioNode);\n      if (!isOffline && isActiveAudioNode(audioNode)) {\n        const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n        const {\n          outputs\n        } = getAudioNodeConnections(audioNode);\n        for (const output of outputs) {\n          if (isAudioNodeOutputConnection(output)) {\n            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n            connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n          } else {\n            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n            nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n          }\n        }\n      }\n    } else {\n      cycleCounters.set(audioNode, cycleCounter - count);\n    }\n  };\n};","map":{"version":3,"names":["isAudioNodeOutputConnection","createDecrementCycleCounter","connectNativeAudioNodeToNativeAudioNode","cycleCounters","getAudioNodeConnections","getNativeAudioNode","getNativeAudioParam","getNativeContext","isActiveAudioNode","isNativeOfflineAudioContext","audioNode","count","cycleCounter","get","undefined","Error","nativeContext","context","isOffline","delete","nativeSourceAudioNode","outputs","output","nativeDestinationAudioNode","nativeDestinationAudioParam","connect","set"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js"],"sourcesContent":["import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map"],"mappings":"AAAA,SAASA,2BAA2B,QAAQ,wCAAwC;AACpF,OAAO,MAAMC,2BAA2B,GAAGA,CAACC,uCAAuC,EAAEC,aAAa,EAAEC,uBAAuB,EAAEC,kBAAkB,EAAEC,mBAAmB,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,2BAA2B,KAAK;EACvO,OAAO,CAACC,SAAS,EAAEC,KAAK,KAAK;IACzB,MAAMC,YAAY,GAAGT,aAAa,CAACU,GAAG,CAACH,SAAS,CAAC;IACjD,IAAIE,YAAY,KAAKE,SAAS,EAAE;MAC5B,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;IACxD;IACA,MAAMC,aAAa,GAAGT,gBAAgB,CAACG,SAAS,CAACO,OAAO,CAAC;IACzD,MAAMC,SAAS,GAAGT,2BAA2B,CAACO,aAAa,CAAC;IAC5D,IAAIJ,YAAY,KAAKD,KAAK,EAAE;MACxBR,aAAa,CAACgB,MAAM,CAACT,SAAS,CAAC;MAC/B,IAAI,CAACQ,SAAS,IAAIV,iBAAiB,CAACE,SAAS,CAAC,EAAE;QAC5C,MAAMU,qBAAqB,GAAGf,kBAAkB,CAACK,SAAS,CAAC;QAC3D,MAAM;UAAEW;QAAQ,CAAC,GAAGjB,uBAAuB,CAACM,SAAS,CAAC;QACtD,KAAK,MAAMY,MAAM,IAAID,OAAO,EAAE;UAC1B,IAAIrB,2BAA2B,CAACsB,MAAM,CAAC,EAAE;YACrC,MAAMC,0BAA0B,GAAGlB,kBAAkB,CAACiB,MAAM,CAAC,CAAC,CAAC,CAAC;YAChEpB,uCAAuC,CAACkB,qBAAqB,EAAEG,0BAA0B,EAAED,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;UACpH,CAAC,MACI;YACD,MAAME,2BAA2B,GAAGlB,mBAAmB,CAACgB,MAAM,CAAC,CAAC,CAAC,CAAC;YAClEF,qBAAqB,CAACK,OAAO,CAACD,2BAA2B,EAAEF,MAAM,CAAC,CAAC,CAAC,CAAC;UACzE;QACJ;MACJ;IACJ,CAAC,MACI;MACDnB,aAAa,CAACuB,GAAG,CAAChB,SAAS,EAAEE,YAAY,GAAGD,KAAK,CAAC;IACtD;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
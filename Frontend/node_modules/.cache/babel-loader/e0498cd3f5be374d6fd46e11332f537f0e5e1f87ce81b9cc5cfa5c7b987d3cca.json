{"ast":null,"code":"const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n      const mergedOptions = {\n        ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n      super(context, false, nativeMediaStreamAudioDestinationNode, null);\n      this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n    }\n    get stream() {\n      return this._nativeMediaStreamAudioDestinationNode.stream;\n    }\n  };\n};","map":{"version":3,"names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","createMediaStreamAudioDestinationNodeConstructor","audioNodeConstructor","createNativeMediaStreamAudioDestinationNode","getNativeContext","isNativeOfflineAudioContext","MediaStreamAudioDestinationNode","constructor","context","options","nativeContext","TypeError","mergedOptions","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js"],"sourcesContent":["const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map"],"mappings":"AAAA,MAAMA,eAAe,GAAG;EACpBC,YAAY,EAAE,CAAC;EACfC,gBAAgB,EAAE,UAAU;EAC5BC,qBAAqB,EAAE;AAC3B,CAAC;AACD,OAAO,MAAMC,gDAAgD,GAAGA,CAACC,oBAAoB,EAAEC,2CAA2C,EAAEC,gBAAgB,EAAEC,2BAA2B,KAAK;EAClL,OAAO,MAAMC,+BAA+B,SAASJ,oBAAoB,CAAC;IACtEK,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;MAC1B,MAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAO,CAAC;MAC/C;MACA,IAAIH,2BAA2B,CAACK,aAAa,CAAC,EAAE;QAC5C,MAAM,IAAIC,SAAS,CAAC,CAAC;MACzB;MACA,MAAMC,aAAa,GAAG;QAAE,GAAGf,eAAe;QAAE,GAAGY;MAAQ,CAAC;MACxD,MAAMI,qCAAqC,GAAGV,2CAA2C,CAACO,aAAa,EAAEE,aAAa,CAAC;MACvH,KAAK,CAACJ,OAAO,EAAE,KAAK,EAAEK,qCAAqC,EAAE,IAAI,CAAC;MAClE,IAAI,CAACC,sCAAsC,GAAGD,qCAAqC;IACvF;IACA,IAAIE,MAAMA,CAAA,EAAG;MACT,OAAO,IAAI,CAACD,sCAAsC,CAACC,MAAM;IAC7D;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
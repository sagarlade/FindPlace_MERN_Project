{"ast":null,"code":"export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = nativeAudioBufferSourceNode => {\n  nativeAudioBufferSourceNode.start = (start => {\n    return (when = 0, offset = 0, duration) => {\n      const buffer = nativeAudioBufferSourceNode.buffer;\n      // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n      const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n      // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n      if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n        start.call(nativeAudioBufferSourceNode, when, 0, 0);\n      } else {\n        start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n      }\n    };\n  })(nativeAudioBufferSourceNode.start);\n};","map":{"version":3,"names":["wrapAudioBufferSourceNodeStartMethodOffsetClamping","nativeAudioBufferSourceNode","start","when","offset","duration","buffer","clampedOffset","Math","min","context","sampleRate","call"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js"],"sourcesContent":["export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map"],"mappings":"AAAA,OAAO,MAAMA,kDAAkD,GAAIC,2BAA2B,IAAK;EAC/FA,2BAA2B,CAACC,KAAK,GAAG,CAAEA,KAAK,IAAK;IAC5C,OAAO,CAACC,IAAI,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEC,QAAQ,KAAK;MACvC,MAAMC,MAAM,GAAGL,2BAA2B,CAACK,MAAM;MACjD;MACA,MAAMC,aAAa,GAAGD,MAAM,KAAK,IAAI,GAAGF,MAAM,GAAGI,IAAI,CAACC,GAAG,CAACH,MAAM,CAACD,QAAQ,EAAED,MAAM,CAAC;MAClF;MACA,IAAIE,MAAM,KAAK,IAAI,IAAIC,aAAa,GAAGD,MAAM,CAACD,QAAQ,GAAG,GAAG,GAAGJ,2BAA2B,CAACS,OAAO,CAACC,UAAU,EAAE;QAC3GT,KAAK,CAACU,IAAI,CAACX,2BAA2B,EAAEE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;MACvD,CAAC,MACI;QACDD,KAAK,CAACU,IAAI,CAACX,2BAA2B,EAAEE,IAAI,EAAEI,aAAa,EAAEF,QAAQ,CAAC;MAC1E;IACJ,CAAC;EACL,CAAC,EAAEJ,2BAA2B,CAACC,KAAK,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
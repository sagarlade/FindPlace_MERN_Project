{"ast":null,"code":"export const createPermissionState = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n  return permissionDescriptor => wrapSubscribeFunction(observer => {\n    if (window === null || window.navigator === undefined || window.navigator.permissions === undefined || window.navigator.permissions.query === undefined) {\n      return emitNotSupportedError(observer);\n    }\n    let isActive = true;\n    let unsubscribe = () => {\n      isActive = false;\n    };\n    window.navigator.permissions.query(permissionDescriptor).then(permissionStatus => {\n      if (isActive) {\n        observer.next(permissionStatus.state);\n      }\n      if (isActive) {\n        permissionStatus.onchange = () => observer.next(permissionStatus.state);\n        unsubscribe = () => {\n          permissionStatus.onchange = null;\n        };\n      }\n    }, err => {\n      if (isActive) {\n        observer.error(err);\n      }\n    });\n    return () => unsubscribe();\n  });\n};","map":{"version":3,"names":["createPermissionState","emitNotSupportedError","window","wrapSubscribeFunction","permissionDescriptor","observer","navigator","undefined","permissions","query","isActive","unsubscribe","then","permissionStatus","next","state","onchange","err","error"],"sources":["C:/Users/Santosh Lade/Desktop/MERN App/client/node_modules/subscribable-things/build/es2019/factories/permission-state.js"],"sourcesContent":["export const createPermissionState = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (permissionDescriptor) => wrapSubscribeFunction((observer) => {\n        if (window === null ||\n            window.navigator === undefined ||\n            window.navigator.permissions === undefined ||\n            window.navigator.permissions.query === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let isActive = true;\n        let unsubscribe = () => {\n            isActive = false;\n        };\n        window.navigator.permissions.query(permissionDescriptor).then((permissionStatus) => {\n            if (isActive) {\n                observer.next(permissionStatus.state);\n            }\n            if (isActive) {\n                permissionStatus.onchange = () => observer.next(permissionStatus.state);\n                unsubscribe = () => {\n                    permissionStatus.onchange = null;\n                };\n            }\n        }, (err) => {\n            if (isActive) {\n                observer.error(err);\n            }\n        });\n        return () => unsubscribe();\n    });\n};\n//# sourceMappingURL=permission-state.js.map"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAGA,CAACC,qBAAqB,EAAEC,MAAM,EAAEC,qBAAqB,KAAK;EAC3F,OAAQC,oBAAoB,IAAKD,qBAAqB,CAAEE,QAAQ,IAAK;IACjE,IAAIH,MAAM,KAAK,IAAI,IACfA,MAAM,CAACI,SAAS,KAAKC,SAAS,IAC9BL,MAAM,CAACI,SAAS,CAACE,WAAW,KAAKD,SAAS,IAC1CL,MAAM,CAACI,SAAS,CAACE,WAAW,CAACC,KAAK,KAAKF,SAAS,EAAE;MAClD,OAAON,qBAAqB,CAACI,QAAQ,CAAC;IAC1C;IACA,IAAIK,QAAQ,GAAG,IAAI;IACnB,IAAIC,WAAW,GAAGA,CAAA,KAAM;MACpBD,QAAQ,GAAG,KAAK;IACpB,CAAC;IACDR,MAAM,CAACI,SAAS,CAACE,WAAW,CAACC,KAAK,CAACL,oBAAoB,CAAC,CAACQ,IAAI,CAAEC,gBAAgB,IAAK;MAChF,IAAIH,QAAQ,EAAE;QACVL,QAAQ,CAACS,IAAI,CAACD,gBAAgB,CAACE,KAAK,CAAC;MACzC;MACA,IAAIL,QAAQ,EAAE;QACVG,gBAAgB,CAACG,QAAQ,GAAG,MAAMX,QAAQ,CAACS,IAAI,CAACD,gBAAgB,CAACE,KAAK,CAAC;QACvEJ,WAAW,GAAGA,CAAA,KAAM;UAChBE,gBAAgB,CAACG,QAAQ,GAAG,IAAI;QACpC,CAAC;MACL;IACJ,CAAC,EAAGC,GAAG,IAAK;MACR,IAAIP,QAAQ,EAAE;QACVL,QAAQ,CAACa,KAAK,CAACD,GAAG,CAAC;MACvB;IACJ,CAAC,CAAC;IACF,OAAO,MAAMN,WAAW,CAAC,CAAC;EAC9B,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}